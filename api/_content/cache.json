{"generatedAt":1679644677977,"generateTime":27,"contents":[{"_path":"/blog/artificial-baka-one","_dir":"blog","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"阿库娅很不错，要整一个吗？","description":"能养成的智能家居系统？好诶！不是虚拟美少女？！！但是但是，大厂生态哪有亲手养大的安心？","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"能养成的智能家居系统？好诶！不是虚拟美少女？！！但是但是，大厂生态哪有亲手养大的安心？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"（可惜是个智障.webp"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"我又不是智障","src":"/blog/artificial-baka-one/i-am-not-baka.jpg"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"网关部分"},"children":[{"type":"text","value":"网关部分"}]},{"type":"element","tag":"h3","props":{"id":"食材"},"children":[{"type":"text","value":"食材"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"项目大体分为两个阶段。第一阶段，改造现有设备然后接入树莓派 4B，通过 Web 应用实现远程控制，调研中转到 Google Home 的方法（到此为止了）。第二阶段，加持先进的 ML (Magic Learning) 技术，实现 AI (Artificial Idiot) 中枢，彻底替换 Google Home。主要技术指标如下。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"远程控制继电器"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"跨平台用户界面"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"断网也能使用"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"接入 Google Home"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"开源（但不一定安全）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"美少女皮 + 自定义唤醒词"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"先不管有生之年的技术指标，第一阶段用到的软件如下。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"后端"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Raspbian Buster (arm64)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Flask"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"OpenCV 4.2"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MariaDB 10.4"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Nginx"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"前端"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Jinja2"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bootstrap 4"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"推荐的开发工具。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"宇宙第一 VS Code"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"宇宙第二 PyCharm"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不入流 Keil C51"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"为避免消化不良，还需掌握如下技巧。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"对硬件一知半解"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"擅长使用 Google"}]}]},{"type":"element","tag":"h3","props":{"id":"应用架构"},"children":[{"type":"text","value":"应用架构"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"网关硬件就用树莓派，主要提供 REST API，配合 Web 界面进行交互，实现远程控制设备。也可接入第三方服务，比如 Google home（嘤语学习好助手）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"为了快速上线，后端咱就用了 Python。框架采用 Flask，是一个采用模块化设计理念的 Web 应用框架，也被称为微框架。Flask 没太多默认配置，可以通过 Flask-extension 引入如 MySQL ORM，模板引擎，表单和身份验证等插件。程序使用 MVC 分层架构，便于协作开发和后续扩展，同样为了加速，暂时使用 Jinja2 模板生成器糊出来的前端。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/server_all.jpg","style":"height: 300px"},"children":[]},{"type":"element","tag":"h3","props":{"id":"数据库"},"children":[{"type":"text","value":"数据库"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MariaDB 是 MySQL 在 MySQL 的基础上改进的关系型数据库，在提升性能的同时保持与 MySQL 的完全兼容，仅需简单卸载 MySQL 并安装 MariaDB 即可。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/umr_database.png","style":"height: 250px"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"参见 E-R 图，"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" 表保存传感器节点的状态，包括传感器类型，环境数据最大值和最小值，传感器或执行器状态，上次动作源等。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sensor"}]},{"type":"text","value":" 表保存传感器历史数据，外键连接 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" 表。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"camera"}]},{"type":"text","value":" 表保存连续运动的发生时间和截图路径。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"user"}]},{"type":"text","value":" 表储存用户信息，包括登录名称，用户邮箱，密码等数据。"}]},{"type":"element","tag":"h3","props":{"id":"运动检测"},"children":[{"type":"text","value":"运动检测"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OpenCV 已经实现了多种常见的检测算法。MOG 算法是一个背景分割算法，以混合高斯模型为基础。此算法使用多个高斯分布混合计算对背景像素建模，指定权重为像素点 RGB 值在整个序列中的持续时间。若一个 RGB 值属于背景像素点，那么它的持续时间相对于运动像素长，相应的权重也更高。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MOG2 是 MOG 算法的改进。它为每一个像素点单独计算高斯分布，这样能更好的适应由于亮度，噪点等外部参数发生变化而引起的场景变化。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GMG 算法结合了贝叶斯分割法和静态背景估算法，使用图像序列的一些帧建立背景模型，然后通过贝叶斯估计 (Bayesian Estimation) 识别前景。这是一种自适应算法，更新出现的图像帧具有更高的权重，从而适应光照变化。此外，还可以利用开闭运算等形态学算法，除去噪音。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/opencv-motion-detect-export.png","style":"height: 600px"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"运动检测流程如上图所示。"}]},{"type":"element","tag":"h2","props":{"id":"节点部分"},"children":[{"type":"text","value":"节点部分"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"目前初号机只提供温度检测，运动检测，远程监控，自动控制，远程控制等功能。不过第一版只是试验品，咱就先来介绍下当前的硬件施工进度，以及软硬件联合测试的方法。"}]},{"type":"element","tag":"h3","props":{"id":"施工标准"},"children":[{"type":"text","value":"施工标准"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"标准实现至少需要准备如下硬件，更敷衍的实现只需一个带摄像头的电脑。大部分模块网上有成品，没有的也能用面包板凑合下。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Raspberry Pi 4B ×1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PI Camera ×1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"8051 MCU ×1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1-Wire temp sensor DS18B20 ×1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ZigBee CC2530 SoC ×3"}]}]},{"type":"element","tag":"h3","props":{"id":"mcu"},"children":[{"type":"text","value":"MCU"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"节点 MCU 有 8051/AVR ATmega8/STM32 可选，8051 本来是不会选的，不过手边有几片 8051，就直接回收利用了，用于运行控制程序，处理和保存数据。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其他还有 ZigBee，传感器模块。ZigBee 负责与其他节点或网关通信，传感器负责感知环境参数。"}]},{"type":"element","tag":"h3","props":{"id":"温度传感器"},"children":[{"type":"text","value":"温度传感器"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DS18B20 温度传感器使用 1-Wire 总线协议通信，每个传感器都有唯一的 64 位地址，MCU 通过该地址识别和寻址总线上的设备。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DS18B20 温度传感器定义了读写指令，响应指令和复位指令。除响应指令外，同步信号均由 MCU 产生。为了确保可靠的数据传输，同一时间只能有一个信号存在于 1-Wire 总线上。数据的传输符合单总线协议，按照初始化配置、ROM 指令、工作指令的顺序进行操作，其所有的指令和数据都是从低位开始发送到高位。"}]},{"type":"element","tag":"h3","props":{"id":"zigbee"},"children":[{"type":"text","value":"ZigBee"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"传感器节点的 ZigBee 模块使用网状路由，即单播发送。数据包通过 Mesh 路由发送，发送方知道接收方是否收到完整数据。网状路由最多可以经过 30 个节点来传输数据。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"咱这里用的是成品模块（DL-LN3X），支持串口通信，只需指定节点的地址和数据，即可发送到目的节点，中间的过程由 CC2530 自带的程序处理。"}]},{"type":"element","tag":"h3","props":{"id":"温度采集"},"children":[{"type":"text","value":"温度采集"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"控制温度节点的程序运行在 8051 MCU 上，使用 C 语音开发。如下图，功能是每隔 1s 上传一次温度信息，或者在上位机请求时立即上传温度信息。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/wsn-temperature-export.png","style":"height: 400px"},"children":[]},{"type":"element","tag":"h3","props":{"id":"pcb"},"children":[{"type":"text","value":"PCB"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"PCB 板形尺寸确定在 50mm*50mm 以内，完成总体布局后，开始放置组件。组件位置是否合理，将直接关系到电路是否可靠。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 PCB 布局中，先按照功能模块划分区域，然后考虑各模块的相对位置。任何高频模拟信号或高精度数字信号都应该尽可能保持距离，原则上所有敏感区域利用 GND 相互隔离，信号路径尽可能短。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/node-pcb.png","style":"height: 300px"},"children":[]},{"type":"element","tag":"h2","props":{"id":"测试"},"children":[{"type":"text","value":"测试"}]},{"type":"element","tag":"h3","props":{"id":"运行环境"},"children":[{"type":"text","value":"运行环境"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"树莓派安装 Raspbian Buster 系统，使用 virtualenv 创建一个 Python 3 虚拟环境，执行 pip 命令安装所有依赖包。"}]},{"type":"element","tag":"code","props":{"code":"$ pip install -r requirements.txt\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ pip install -r requirements.txt\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"运动捕捉相关功能使用 OpenCV 实现，PyPi 预编译的 OpenCV 4 可能缺少部分功能（目前够用了），如果需要完整功能，下面是编译安装的方法。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下载 opencv 和扩展库 opencv_contrib 源码到本地，进入 Python 3 虚拟环境，安装 numpy 和编译工具，使用 CMake 来构建编译配置。"}]},{"type":"element","tag":"code","props":{"code":"$ cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \\\n    -D ENABLE_NEON=ON \\\n    -D ENABLE_VFPV3=ON \\\n    -D BUILD_TESTS=OFF \\\n    -D OPENCV_ENABLE_NONFREE=ON \\\n    -D INSTALL_PYTHON_EXAMPLES=OFF \\\n    -D BUILD_EXAMPLES=OFF ..\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \\\n    -D ENABLE_NEON=ON \\\n    -D ENABLE_VFPV3=ON \\\n    -D BUILD_TESTS=OFF \\\n    -D OPENCV_ENABLE_NONFREE=ON \\\n    -D INSTALL_PYTHON_EXAMPLES=OFF \\\n    -D BUILD_EXAMPLES=OFF ..\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"确认配置无误，开始编译。"}]},{"type":"element","tag":"code","props":{"code":"# 4个核心，Raspberry Pi 4B 大约需要 1 小时\nmake -j4\nmake install\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 4个核心，Raspberry Pi 4B 大约需要 1 小时\nmake -j4\nmake install\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"编译的 OpenCV 默认安装在全局的 site-packages 目录。"}]},{"type":"element","tag":"h3","props":{"id":"数据库-1"},"children":[{"type":"text","value":"数据库"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装 MariaDB，使用 flask-migrate 创建数据库。"}]},{"type":"element","tag":"code","props":{"code":"$ python manage.py db init\n$ python manage.py db migrate\n$ python manage.py db upgrade\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ python manage.py db init\n$ python manage.py db migrate\n$ python manage.py db upgrade\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"开动吧"},"children":[{"type":"text","value":"开动吧"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"根目录下的 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"gate.py"}]},{"type":"text","value":" 是网关程序的入口文件。在生产环境部署时，还需使用 Nginx 反向代理，以提高系统的稳定性和安全性。"}]},{"type":"element","tag":"code","props":{"code":"$ which python\n/home/xxx/umr-dive/venv/bin/python\n$ export Env=Dev\n$ sudo -E /home/xxx/umr-dive/venv/bin/python gate.py -i 0.0.0.0 -o 80\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ which python\n/home/xxx/umr-dive/venv/bin/python\n$ export Env=Dev\n$ sudo -E /home/xxx/umr-dive/venv/bin/python gate.py -i 0.0.0.0 -o 80\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"现在咱有了个能用的智能家居，别的再慢慢扩展，但愿不会成为有生之年系列吧。"}]},{"type":"element","tag":"h2","props":{"id":"reference"},"children":[{"type":"text","value":"Reference"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/aimkiray/udive-gateway","rel":["nofollow"]},"children":[{"type":"text","value":"项目源码"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.pyimagesearch.com/2019/09/02/opencv-stream-video-to-web-browser-html-page/","rel":["nofollow"]},"children":[{"type":"text","value":"OpenCV – Stream video to web browser/HTML page"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.pyimagesearch.com/2019/09/16/install-opencv-4-on-raspberry-pi-4-and-raspbian-buster/","rel":["nofollow"]},"children":[{"type":"text","value":"Install OpenCV 4 on Raspberry Pi 4 and Raspbian Buster"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"未完待续。"}]}]},"date":"2020-02-27T23:55:01.000Z","tags":["iot","pcb","mcu"],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"能养成的智能家居系统？好诶！不是虚拟美少女？！！但是但是，大厂生态哪有亲手养大的安心？"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"（可惜是个智障.webp"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"我又不是智障","src":"/blog/artificial-baka-one/i-am-not-baka.jpg"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"网关部分"},"children":[{"type":"text","value":"网关部分"}]},{"type":"element","tag":"h3","props":{"id":"食材"},"children":[{"type":"text","value":"食材"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"项目大体分为两个阶段。第一阶段，改造现有设备然后接入树莓派 4B，通过 Web 应用实现远程控制，调研中转到 Google Home 的方法（到此为止了）。第二阶段，加持先进的 ML (Magic Learning) 技术，实现 AI (Artificial Idiot) 中枢，彻底替换 Google Home。主要技术指标如下。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"远程控制继电器"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"跨平台用户界面"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"断网也能使用"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"接入 Google Home"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"开源（但不一定安全）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"美少女皮 + 自定义唤醒词"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"先不管有生之年的技术指标，第一阶段用到的软件如下。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"后端"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Raspbian Buster (arm64)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Flask"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"OpenCV 4.2"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MariaDB 10.4"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Nginx"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"前端"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Jinja2"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Bootstrap 4"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"推荐的开发工具。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"宇宙第一 VS Code"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"宇宙第二 PyCharm"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"不入流 Keil C51"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"为避免消化不良，还需掌握如下技巧。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"对硬件一知半解"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"擅长使用 Google"}]}]},{"type":"element","tag":"h3","props":{"id":"应用架构"},"children":[{"type":"text","value":"应用架构"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"网关硬件就用树莓派，主要提供 REST API，配合 Web 界面进行交互，实现远程控制设备。也可接入第三方服务，比如 Google home（嘤语学习好助手）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"为了快速上线，后端咱就用了 Python。框架采用 Flask，是一个采用模块化设计理念的 Web 应用框架，也被称为微框架。Flask 没太多默认配置，可以通过 Flask-extension 引入如 MySQL ORM，模板引擎，表单和身份验证等插件。程序使用 MVC 分层架构，便于协作开发和后续扩展，同样为了加速，暂时使用 Jinja2 模板生成器糊出来的前端。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/server_all.jpg","style":"height: 300px"},"children":[]},{"type":"element","tag":"h3","props":{"id":"数据库"},"children":[{"type":"text","value":"数据库"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MariaDB 是 MySQL 在 MySQL 的基础上改进的关系型数据库，在提升性能的同时保持与 MySQL 的完全兼容，仅需简单卸载 MySQL 并安装 MariaDB 即可。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/umr_database.png","style":"height: 250px"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"参见 E-R 图，"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" 表保存传感器节点的状态，包括传感器类型，环境数据最大值和最小值，传感器或执行器状态，上次动作源等。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sensor"}]},{"type":"text","value":" 表保存传感器历史数据，外键连接 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"config"}]},{"type":"text","value":" 表。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"camera"}]},{"type":"text","value":" 表保存连续运动的发生时间和截图路径。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"user"}]},{"type":"text","value":" 表储存用户信息，包括登录名称，用户邮箱，密码等数据。"}]},{"type":"element","tag":"h3","props":{"id":"运动检测"},"children":[{"type":"text","value":"运动检测"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"OpenCV 已经实现了多种常见的检测算法。MOG 算法是一个背景分割算法，以混合高斯模型为基础。此算法使用多个高斯分布混合计算对背景像素建模，指定权重为像素点 RGB 值在整个序列中的持续时间。若一个 RGB 值属于背景像素点，那么它的持续时间相对于运动像素长，相应的权重也更高。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"MOG2 是 MOG 算法的改进。它为每一个像素点单独计算高斯分布，这样能更好的适应由于亮度，噪点等外部参数发生变化而引起的场景变化。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GMG 算法结合了贝叶斯分割法和静态背景估算法，使用图像序列的一些帧建立背景模型，然后通过贝叶斯估计 (Bayesian Estimation) 识别前景。这是一种自适应算法，更新出现的图像帧具有更高的权重，从而适应光照变化。此外，还可以利用开闭运算等形态学算法，除去噪音。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/opencv-motion-detect-export.png","style":"height: 600px"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"运动检测流程如上图所示。"}]},{"type":"element","tag":"h2","props":{"id":"节点部分"},"children":[{"type":"text","value":"节点部分"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"目前初号机只提供温度检测，运动检测，远程监控，自动控制，远程控制等功能。不过第一版只是试验品，咱就先来介绍下当前的硬件施工进度，以及软硬件联合测试的方法。"}]},{"type":"element","tag":"h3","props":{"id":"施工标准"},"children":[{"type":"text","value":"施工标准"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"标准实现至少需要准备如下硬件，更敷衍的实现只需一个带摄像头的电脑。大部分模块网上有成品，没有的也能用面包板凑合下。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Raspberry Pi 4B ×1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PI Camera ×1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"8051 MCU ×1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1-Wire temp sensor DS18B20 ×1"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ZigBee CC2530 SoC ×3"}]}]},{"type":"element","tag":"h3","props":{"id":"mcu"},"children":[{"type":"text","value":"MCU"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"节点 MCU 有 8051/AVR ATmega8/STM32 可选，8051 本来是不会选的，不过手边有几片 8051，就直接回收利用了，用于运行控制程序，处理和保存数据。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其他还有 ZigBee，传感器模块。ZigBee 负责与其他节点或网关通信，传感器负责感知环境参数。"}]},{"type":"element","tag":"h3","props":{"id":"温度传感器"},"children":[{"type":"text","value":"温度传感器"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DS18B20 温度传感器使用 1-Wire 总线协议通信，每个传感器都有唯一的 64 位地址，MCU 通过该地址识别和寻址总线上的设备。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DS18B20 温度传感器定义了读写指令，响应指令和复位指令。除响应指令外，同步信号均由 MCU 产生。为了确保可靠的数据传输，同一时间只能有一个信号存在于 1-Wire 总线上。数据的传输符合单总线协议，按照初始化配置、ROM 指令、工作指令的顺序进行操作，其所有的指令和数据都是从低位开始发送到高位。"}]},{"type":"element","tag":"h3","props":{"id":"zigbee"},"children":[{"type":"text","value":"ZigBee"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"传感器节点的 ZigBee 模块使用网状路由，即单播发送。数据包通过 Mesh 路由发送，发送方知道接收方是否收到完整数据。网状路由最多可以经过 30 个节点来传输数据。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"咱这里用的是成品模块（DL-LN3X），支持串口通信，只需指定节点的地址和数据，即可发送到目的节点，中间的过程由 CC2530 自带的程序处理。"}]},{"type":"element","tag":"h3","props":{"id":"温度采集"},"children":[{"type":"text","value":"温度采集"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"控制温度节点的程序运行在 8051 MCU 上，使用 C 语音开发。如下图，功能是每隔 1s 上传一次温度信息，或者在上位机请求时立即上传温度信息。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/wsn-temperature-export.png","style":"height: 400px"},"children":[]},{"type":"element","tag":"h3","props":{"id":"pcb"},"children":[{"type":"text","value":"PCB"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"PCB 板形尺寸确定在 50mm*50mm 以内，完成总体布局后，开始放置组件。组件位置是否合理，将直接关系到电路是否可靠。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 PCB 布局中，先按照功能模块划分区域，然后考虑各模块的相对位置。任何高频模拟信号或高精度数字信号都应该尽可能保持距离，原则上所有敏感区域利用 GND 相互隔离，信号路径尽可能短。"}]},{"type":"element","tag":"img","props":{"src":"/blog/artificial-baka-one/node-pcb.png","style":"height: 300px"},"children":[]},{"type":"element","tag":"h2","props":{"id":"测试"},"children":[{"type":"text","value":"测试"}]},{"type":"element","tag":"h3","props":{"id":"运行环境"},"children":[{"type":"text","value":"运行环境"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"树莓派安装 Raspbian Buster 系统，使用 virtualenv 创建一个 Python 3 虚拟环境，执行 pip 命令安装所有依赖包。"}]},{"type":"element","tag":"code","props":{"code":"$ pip install -r requirements.txt\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"$ pip install -r requirements.txt"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"运动捕捉相关功能使用 OpenCV 实现，PyPi 预编译的 OpenCV 4 可能缺少部分功能（目前够用了），如果需要完整功能，下面是编译安装的方法。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下载 opencv 和扩展库 opencv_contrib 源码到本地，进入 Python 3 虚拟环境，安装 numpy 和编译工具，使用 CMake 来构建编译配置。"}]},{"type":"element","tag":"code","props":{"code":"$ cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \\\n    -D ENABLE_NEON=ON \\\n    -D ENABLE_VFPV3=ON \\\n    -D BUILD_TESTS=OFF \\\n    -D OPENCV_ENABLE_NONFREE=ON \\\n    -D INSTALL_PYTHON_EXAMPLES=OFF \\\n    -D BUILD_EXAMPLES=OFF ..\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"$ cmake -D CMAKE_BUILD_TYPE=RELEASE \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"    -D CMAKE_INSTALL_PREFIX=/usr/local \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"    -D OPENCV_EXTRA_MODULES_PATH="}]},{"type":"element","tag":"span","props":{"class":"ct-c4fca7"},"children":[{"type":"text","value":"~"}]},{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"/opencv_contrib/modules \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"    -D ENABLE_NEON=ON \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"    -D ENABLE_VFPV3=ON \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"    -D BUILD_TESTS=OFF \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"    -D OPENCV_ENABLE_NONFREE=ON \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"    -D INSTALL_PYTHON_EXAMPLES=OFF \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"    -D BUILD_EXAMPLES=OFF .."}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"确认配置无误，开始编译。"}]},{"type":"element","tag":"code","props":{"code":"# 4个核心，Raspberry Pi 4B 大约需要 1 小时\nmake -j4\nmake install\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-cd7641"},"children":[{"type":"text","value":"# 4个核心，Raspberry Pi 4B 大约需要 1 小时"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"make -j4"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"make install"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"编译的 OpenCV 默认安装在全局的 site-packages 目录。"}]},{"type":"element","tag":"h3","props":{"id":"数据库-1"},"children":[{"type":"text","value":"数据库"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装 MariaDB，使用 flask-migrate 创建数据库。"}]},{"type":"element","tag":"code","props":{"code":"$ python manage.py db init\n$ python manage.py db migrate\n$ python manage.py db upgrade\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"$ python manage.py db init"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"$ python manage.py db migrate"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"$ python manage.py db upgrade"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"开动吧"},"children":[{"type":"text","value":"开动吧"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"根目录下的 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"gate.py"}]},{"type":"text","value":" 是网关程序的入口文件。在生产环境部署时，还需使用 Nginx 反向代理，以提高系统的稳定性和安全性。"}]},{"type":"element","tag":"code","props":{"code":"$ which python\n/home/xxx/umr-dive/venv/bin/python\n$ export Env=Dev\n$ sudo -E /home/xxx/umr-dive/venv/bin/python gate.py -i 0.0.0.0 -o 80\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"$ which python"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"/home/xxx/umr-dive/venv/bin/python"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"$ "}]},{"type":"element","tag":"span","props":{"class":"ct-c4fca7"},"children":[{"type":"text","value":"export"}]},{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":" Env=Dev"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-bb98a6"},"children":[{"type":"text","value":"$ sudo -E /home/xxx/umr-dive/venv/bin/python gate.py -i 0.0.0.0 -o 80"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"现在咱有了个能用的智能家居，别的再慢慢扩展，但愿不会成为有生之年系列吧。"}]},{"type":"element","tag":"h2","props":{"id":"reference"},"children":[{"type":"text","value":"Reference"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/aimkiray/udive-gateway","rel":["nofollow"]},"children":[{"type":"text","value":"项目源码"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.pyimagesearch.com/2019/09/02/opencv-stream-video-to-web-browser-html-page/","rel":["nofollow"]},"children":[{"type":"text","value":"OpenCV – Stream video to web browser/HTML page"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.pyimagesearch.com/2019/09/16/install-opencv-4-on-raspberry-pi-4-and-raspbian-buster/","rel":["nofollow"]},"children":[{"type":"text","value":"Install OpenCV 4 on Raspberry Pi 4 and Raspbian Buster"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"未完待续。"}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-cd7641{color:#6E7781}.ct-c4fca7{color:#CF222E}.ct-bb98a6{color:#24292F}.dark .ct-bb98a6{color:#C9D1D9}.dark .ct-c4fca7{color:#FF7B72}.dark .ct-cd7641{color:#8B949E}"}]}],"toc":{"title":"","searchDepth":5,"depth":5,"links":[{"id":"网关部分","depth":2,"text":"网关部分","children":[{"id":"食材","depth":3,"text":"食材"},{"id":"应用架构","depth":3,"text":"应用架构"},{"id":"数据库","depth":3,"text":"数据库"},{"id":"运动检测","depth":3,"text":"运动检测"}]},{"id":"节点部分","depth":2,"text":"节点部分","children":[{"id":"施工标准","depth":3,"text":"施工标准"},{"id":"mcu","depth":3,"text":"MCU"},{"id":"温度传感器","depth":3,"text":"温度传感器"},{"id":"zigbee","depth":3,"text":"ZigBee"},{"id":"温度采集","depth":3,"text":"温度采集"},{"id":"pcb","depth":3,"text":"PCB"}]},{"id":"测试","depth":2,"text":"测试","children":[{"id":"运行环境","depth":3,"text":"运行环境"},{"id":"数据库-1","depth":3,"text":"数据库"},{"id":"开动吧","depth":3,"text":"开动吧"}]},{"id":"reference","depth":2,"text":"Reference"}]}},"_type":"markdown","_id":"content:blog:artificial-baka-one.md","_source":"content","_file":"blog/artificial-baka-one.md","_extension":"md"},{"_path":"/blog/make-nvidia-explosion","_dir":"blog","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"NVIDIA 核试验（Linux）","description":"Linux 的 NVIDIA 超频工具可没有 Windows 的那么多，看了一圈好像也只有官方提供的 nvidia-settings。然而这玩意用 X11 扩展协议和显卡 DDX 驱动通信，而服务器没有图形界面，根本届不到。","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Linux 的 NVIDIA 超频工具可没有 Windows 的那么多，看了一圈好像也只有官方提供的 nvidia-settings。然而这玩意用 X11 扩展协议和显卡 DDX 驱动通信，而服务器没有图形界面，根本届不到。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以想用官方工具超频，估计还得装个 Xorg 和虚拟显示器。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Explosion","src":"/blog/make-nvidia-explosion/explosion.jpeg"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"环境准备"},"children":[{"type":"text","value":"环境准备"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"显卡：RTX 2080Ti / RTX 3080"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"系统：Ubuntu 18.04.5 / CentOS 7.6"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"驱动：apt install nvidia-utils-460-server"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装 Xorg。"}]},{"type":"element","tag":"code","props":{"code":"# ubuntu\napt update\napt install xorg\n\n# centos\nyum install xorg-x11-server-Xorg\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# ubuntu\napt update\napt install xorg\n\n# centos\nyum install xorg-x11-server-Xorg\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"生成 Xorg 配置。"}]},{"type":"element","tag":"code","props":{"code":"sudo nvidia-xconfig -a --allow-empty-initial-configuration --cool-bits=28\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo nvidia-xconfig -a --allow-empty-initial-configuration --cool-bits=28\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选项 --allow-empty-initial-configuration 用来允许 Nvidia 驱动在没有连接任何显示设备的情况下工作（460.32.03 及以上版本默认为 True）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选项 --cool-bits 是超频功能开关，其值为各配置项组成二进制数字再转十进制数字。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1   (bit 0) - 在 nvidia-settings 的 Clock Frequencies 参数上启用旧版 (pre-Fermi) 核心的超频。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"2   (bit 1) - 设置该位时，驱动程序将在使用具有不同数量显存的 GPU 时尝试初始化 SLI。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"4   (bit 2) - 在 nvidia-settings 的 Thermal Monitor 参数上启用手动配置 GPU 风扇速度。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"8   (bit 3) - 在 nvidia-settings 的 PowerMizer 参数上启用超频。自 337.12 版本起适用于 Fermi 架构及更高版本。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"16 (bit 4) - 使用 nvidia-settings CLI 选项启用过电压。自 346.16 版起适用于 Fermi 架构及更高版本。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"举个栗子，修改 RTX 3080（Ampere 架构）的核心频率，电压和风扇转速，需要将 Coolbits 值设置为 28（二进制 11100 转十进制为 28）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后台启动 Xorg。"}]},{"type":"element","tag":"code","props":{"code":"nohup sudo /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch &\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"nohup sudo /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch &\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"运行 nvidia-smi，此时能看到 Xorg 在使用 GPU。"}]},{"type":"element","tag":"h2","props":{"id":"如何食用"},"children":[{"type":"text","value":"如何食用"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本文的主角 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nvidia-settings"}]},{"type":"text","value":" 依赖 X11 协议和显卡通信。所以在运行前要加上 DISPLAY 环境变量。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"由于 X11 不是完全体，执行后还是会报错。没关系，看到修改成功的提示就行。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"为防止不可控核事故，先给风扇拉满（"}]},{"type":"element","tag":"code","props":{"code":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUFanControlState=1\nDISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [fan:0]/GPUTargetFanSpeed=100\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUFanControlState=1\nDISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [fan:0]/GPUTargetFanSpeed=100\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"核心降频，显存超频。"}]},{"type":"element","tag":"code","props":{"code":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUMemoryTransferRateOffset[4]=1400\nDISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUGraphicsClockOffset[4]=-200\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUMemoryTransferRateOffset[4]=1400\nDISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUGraphicsClockOffset[4]=-200\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"gpu:0"}]},{"type":"text","value":" 是显卡序号，多显卡可以修改序号分别执行。后面的 "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":" 适用于 20 系及 30 系显卡，如果你是 10 系卡改成 "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" 就好（再不行改成 2，不会炸，大概）。超频用正值，降频用负值，请小心往上加，因为超多了真的会炸（一般重启能恢复）。显卡序号可用 nvidia-smi 查看。"}]},{"type":"element","tag":"code","props":{"code":"$ nvidia-smi -L\n\nGPU 0: GeForce RTX 3080 (UUID: GPU-6f62e1a5-2d7b-31a5-aa25-628d349e0235)\nGPU 1: GeForce RTX 3080 (UUID: GPU-06f427c3-4a75-9ad0-5c0f-06a9acaadfa5)\nGPU 2: GeForce RTX 3080 (UUID: GPU-891c2e2f-9a93-04c1-323b-95d5f41c37te)\nGPU 3: GeForce RTX 3080 (UUID: GPU-98e4d489-71ae-c6ef-b80c-93bebe1f7f5e)\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ nvidia-smi -L\n\nGPU 0: GeForce RTX 3080 (UUID: GPU-6f62e1a5-2d7b-31a5-aa25-628d349e0235)\nGPU 1: GeForce RTX 3080 (UUID: GPU-06f427c3-4a75-9ad0-5c0f-06a9acaadfa5)\nGPU 2: GeForce RTX 3080 (UUID: GPU-891c2e2f-9a93-04c1-323b-95d5f41c37te)\nGPU 3: GeForce RTX 3080 (UUID: GPU-98e4d489-71ae-c6ef-b80c-93bebe1f7f5e)\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"多张显卡可以这么整。"}]},{"type":"element","tag":"code","props":{"code":"for i in `nvidia-smi -L | awk -F: '{print $1}' | awk '{print $2}'`; do\n    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:$i]/GPUFanControlState=1 -a [fan:$i]/GPUTargetFanSpeed=100\n\n    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:$i]/GPUMemoryTransferRateOffset[4]=2000 -a [gpu:$i]/GPUGraphicsClockOffset[4]=-600\n    echo GPU $i is ready.\ndone\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"for i in `nvidia-smi -L | awk -F: '{print $1}' | awk '{print $2}'`; do\n    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:$i]/GPUFanControlState=1 -a [fan:$i]/GPUTargetFanSpeed=100\n\n    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:$i]/GPUMemoryTransferRateOffset[4]=2000 -a [gpu:$i]/GPUGraphicsClockOffset[4]=-600\n    echo GPU $i is ready.\ndone\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"返回的信息如下。"}]},{"type":"element","tag":"code","props":{"code":"ERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUFanControlState' (meow:0[gpu:0]) assigned value 1.\n\nERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUTargetFanSpeed' (meow:0[fan:0]) assigned value 99.\n\nERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUMemoryTransferRateOffset' (meow:0[gpu:0]) assigned value 1400.\n\nERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUGraphicsClockOffset' (meow:0[gpu:0]) assigned value -200.\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"ERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUFanControlState' (meow:0[gpu:0]) assigned value 1.\n\nERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUTargetFanSpeed' (meow:0[fan:0]) assigned value 99.\n\nERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUMemoryTransferRateOffset' (meow:0[gpu:0]) assigned value 1400.\n\nERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUGraphicsClockOffset' (meow:0[gpu:0]) assigned value -200.\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"执行后实时生效，前后数据可通过 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nvidia-smi -q | grep MHz"}]},{"type":"text","value":" 对比。"}]},{"type":"element","tag":"h2","props":{"id":"清理环境"},"children":[{"type":"text","value":"清理环境"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Xorg 可以关掉。"}]},{"type":"element","tag":"code","props":{"code":"$ ps -ef | grep xorg\nroot      9816 33061  0 04:55 pts/0    00:00:00 grep --color=auto xorg\nroot     47705 33061  0 03:38 tty7     00:00:14 /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch\n\n$ kill 47705\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ ps -ef | grep xorg\nroot      9816 33061  0 04:55 pts/0    00:00:00 grep --color=auto xorg\nroot     47705 33061  0 03:38 tty7     00:00:14 /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch\n\n$ kill 47705\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"tips"},"children":[{"type":"text","value":"Tips"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"不想在后台跑个 Xorg？可以用 xini 执行 nvidia-settings，配合 ansible 更优雅。"}]},{"type":"element","tag":"code","props":{"code":"#ubuntu\napt install xinit\n\n#centos\nyum install xorg-x11-xinit\n\nxinit /usr/bin/nvidia-settings -a [gpu:0]/GPUGraphicsClockOffset[4]=600 --  :0 -once\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#ubuntu\napt install xinit\n\n#centos\nyum install xorg-x11-xinit\n\nxinit /usr/bin/nvidia-settings -a [gpu:0]/GPUGraphicsClockOffset[4]=600 --  :0 -once\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"当然也可以给服务器接上显示器，再安装一个小巧的桌面环境，比如 Xfce，该有的依赖就都有了。"}]},{"type":"element","tag":"code","props":{"code":"sudo apt update\nsudo apt install xfce4 xfce4-goodies\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt update\nsudo apt install xfce4 xfce4-goodies\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此外，显示器一般都有 EDID 信息，包括显示器的分辨率、厂商名称与序号等，保存在显示器的 PROM 或 EEPROM 中。我们也可以给虚拟显示器整一个（强迫症必备"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/linuxhw/EDID/tree/master/Digital/Nvidia","rel":["nofollow"]},"children":[{"type":"text","value":"这里"}]},{"type":"text","value":"有整理好的 EDID 文件，随便找一个，比如 Nvidia Defaul，分辨率 1920x1080。"}]},{"type":"element","tag":"code","props":{"code":"$ sudo vim /etc/X11/edid.txt\n\n00 ff ff ff ff ff ff 00 3a c4 00 00 00 00 00 00\n2d 0c 01 03 80 20 12 00 ea a8 e0 99 57 4b 92 25\n1c 50 54 00 00 00 01 01 01 01 01 01 01 01 01 01\n01 01 01 01 01 01 02 3a 80 18 71 38 2d 40 30 20\n35 00 42 b5 10 01 00 18 00 00 00 fc 00 4e 76 69\n64 69 61 20 44 65 66 61 75 6c 00 00 00 fc 00 74\n20 46 6c 61 74 20 50 61 6e 65 6c 00 00 00 00 fd\n00 00 3d 1d 44 0f 00 00 20 20 20 20 20 00 00 1d\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ sudo vim /etc/X11/edid.txt\n\n00 ff ff ff ff ff ff 00 3a c4 00 00 00 00 00 00\n2d 0c 01 03 80 20 12 00 ea a8 e0 99 57 4b 92 25\n1c 50 54 00 00 00 01 01 01 01 01 01 01 01 01 01\n01 01 01 01 01 01 02 3a 80 18 71 38 2d 40 30 20\n35 00 42 b5 10 01 00 18 00 00 00 fc 00 4e 76 69\n64 69 61 20 44 65 66 61 75 6c 00 00 00 fc 00 74\n20 46 6c 61 74 20 50 61 6e 65 6c 00 00 00 00 fd\n00 00 3d 1d 44 0f 00 00 20 20 20 20 20 00 00 1d\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 nvidia-xconfig 生成 Xorg 配置时添加自定义参数。"}]},{"type":"element","tag":"code","props":{"code":"sudo nvidia-xconfig -a --allow-empty-initial-configuration \\\n--use-display-device=None --virtual=1920x1080 \\\n--use-display-device=\"DFP-0\" --connected-monitor=\"DFP-0\" \\\n--custom-edid=\"DFP-0:/etc/X11/edid.txt\" --cool-bits=28\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo nvidia-xconfig -a --allow-empty-initial-configuration \\\n--use-display-device=None --virtual=1920x1080 \\\n--use-display-device=\"DFP-0\" --connected-monitor=\"DFP-0\" \\\n--custom-edid=\"DFP-0:/etc/X11/edid.txt\" --cool-bits=28\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此时可以安装 VNC 来使用 nvidia-settings 的图形界面，但都到这一步了为何不直接装桌面版 Ubuntu 呢 (ーー゛)"}]}]},"date":"2021-03-10T12:10:52.000Z","tags":["linux","nvidia","xorg"],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Linux 的 NVIDIA 超频工具可没有 Windows 的那么多，看了一圈好像也只有官方提供的 nvidia-settings。然而这玩意用 X11 扩展协议和显卡 DDX 驱动通信，而服务器没有图形界面，根本届不到。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以想用官方工具超频，估计还得装个 Xorg 和虚拟显示器。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Explosion","src":"/blog/make-nvidia-explosion/explosion.jpeg"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"环境准备"},"children":[{"type":"text","value":"环境准备"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"显卡：RTX 2080Ti / RTX 3080"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"系统：Ubuntu 18.04.5 / CentOS 7.6"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"驱动：apt install nvidia-utils-460-server"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装 Xorg。"}]},{"type":"element","tag":"code","props":{"code":"# ubuntu\napt update\napt install xorg\n\n# centos\nyum install xorg-x11-server-Xorg\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-296805"},"children":[{"type":"text","value":"# ubuntu"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"apt update"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"apt install xorg"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-296805"},"children":[{"type":"text","value":"# centos"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"yum install xorg-x11-server-Xorg"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"生成 Xorg 配置。"}]},{"type":"element","tag":"code","props":{"code":"sudo nvidia-xconfig -a --allow-empty-initial-configuration --cool-bits=28\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"sudo nvidia-xconfig -a --allow-empty-initial-configuration --cool-bits=28"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选项 --allow-empty-initial-configuration 用来允许 Nvidia 驱动在没有连接任何显示设备的情况下工作（460.32.03 及以上版本默认为 True）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选项 --cool-bits 是超频功能开关，其值为各配置项组成二进制数字再转十进制数字。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"1   (bit 0) - 在 nvidia-settings 的 Clock Frequencies 参数上启用旧版 (pre-Fermi) 核心的超频。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"2   (bit 1) - 设置该位时，驱动程序将在使用具有不同数量显存的 GPU 时尝试初始化 SLI。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"4   (bit 2) - 在 nvidia-settings 的 Thermal Monitor 参数上启用手动配置 GPU 风扇速度。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"8   (bit 3) - 在 nvidia-settings 的 PowerMizer 参数上启用超频。自 337.12 版本起适用于 Fermi 架构及更高版本。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"16 (bit 4) - 使用 nvidia-settings CLI 选项启用过电压。自 346.16 版起适用于 Fermi 架构及更高版本。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"举个栗子，修改 RTX 3080（Ampere 架构）的核心频率，电压和风扇转速，需要将 Coolbits 值设置为 28（二进制 11100 转十进制为 28）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"后台启动 Xorg。"}]},{"type":"element","tag":"code","props":{"code":"nohup sudo /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch &\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"nohup sudo /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch "}]},{"type":"element","tag":"span","props":{"class":"ct-6c1c43"},"children":[{"type":"text","value":"&"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"运行 nvidia-smi，此时能看到 Xorg 在使用 GPU。"}]},{"type":"element","tag":"h2","props":{"id":"如何食用"},"children":[{"type":"text","value":"如何食用"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本文的主角 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nvidia-settings"}]},{"type":"text","value":" 依赖 X11 协议和显卡通信。所以在运行前要加上 DISPLAY 环境变量。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"由于 X11 不是完全体，执行后还是会报错。没关系，看到修改成功的提示就行。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"为防止不可控核事故，先给风扇拉满（"}]},{"type":"element","tag":"code","props":{"code":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUFanControlState=1\nDISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [fan:0]/GPUTargetFanSpeed=100\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUFanControlState=1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [fan:0]/GPUTargetFanSpeed=100"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"核心降频，显存超频。"}]},{"type":"element","tag":"code","props":{"code":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUMemoryTransferRateOffset[4]=1400\nDISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUGraphicsClockOffset[4]=-200\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUMemoryTransferRateOffset[4]=1400"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:0]/GPUGraphicsClockOffset[4]=-200"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"gpu:0"}]},{"type":"text","value":" 是显卡序号，多显卡可以修改序号分别执行。后面的 "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":" 适用于 20 系及 30 系显卡，如果你是 10 系卡改成 "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" 就好（再不行改成 2，不会炸，大概）。超频用正值，降频用负值，请小心往上加，因为超多了真的会炸（一般重启能恢复）。显卡序号可用 nvidia-smi 查看。"}]},{"type":"element","tag":"code","props":{"code":"$ nvidia-smi -L\n\nGPU 0: GeForce RTX 3080 (UUID: GPU-6f62e1a5-2d7b-31a5-aa25-628d349e0235)\nGPU 1: GeForce RTX 3080 (UUID: GPU-06f427c3-4a75-9ad0-5c0f-06a9acaadfa5)\nGPU 2: GeForce RTX 3080 (UUID: GPU-891c2e2f-9a93-04c1-323b-95d5f41c37te)\nGPU 3: GeForce RTX 3080 (UUID: GPU-98e4d489-71ae-c6ef-b80c-93bebe1f7f5e)\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"$ nvidia-smi -L"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"GPU 0: GeForce RTX 3080 (UUID: GPU-6f62e1a5-2d7b-31a5-aa25-628d349e0235)"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"GPU 1: GeForce RTX 3080 (UUID: GPU-06f427c3-4a75-9ad0-5c0f-06a9acaadfa5)"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"GPU 2: GeForce RTX 3080 (UUID: GPU-891c2e2f-9a93-04c1-323b-95d5f41c37te)"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"GPU 3: GeForce RTX 3080 (UUID: GPU-98e4d489-71ae-c6ef-b80c-93bebe1f7f5e)"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"多张显卡可以这么整。"}]},{"type":"element","tag":"code","props":{"code":"for i in `nvidia-smi -L | awk -F: '{print $1}' | awk '{print $2}'`; do\n    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:$i]/GPUFanControlState=1 -a [fan:$i]/GPUTargetFanSpeed=100\n\n    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:$i]/GPUMemoryTransferRateOffset[4]=2000 -a [gpu:$i]/GPUGraphicsClockOffset[4]=-600\n    echo GPU $i is ready.\ndone\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-6c1c43"},"children":[{"type":"text","value":"for"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" i "}]},{"type":"element","tag":"span","props":{"class":"ct-6c1c43"},"children":[{"type":"text","value":"in"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":"`nvidia-smi -L "}]},{"type":"element","tag":"span","props":{"class":"ct-6c1c43"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":" awk -F: '{print $1}' "}]},{"type":"element","tag":"span","props":{"class":"ct-6c1c43"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":" awk '{print $2}'`"}]},{"type":"element","tag":"span","props":{"class":"ct-6c1c43"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6c1c43"},"children":[{"type":"text","value":"do"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:$i]/GPUFanControlState=1 -a [fan:$i]/GPUTargetFanSpeed=100"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"    DISPLAY=:0 XAUTHORITY=/var/run/lightdm/root/:0 nvidia-settings -c :0 -a [gpu:$i]/GPUMemoryTransferRateOffset[4]=2000 -a [gpu:$i]/GPUGraphicsClockOffset[4]=-600"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-985020"},"children":[{"type":"text","value":"echo"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" GPU $i is ready."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-6c1c43"},"children":[{"type":"text","value":"done"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"返回的信息如下。"}]},{"type":"element","tag":"code","props":{"code":"ERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUFanControlState' (meow:0[gpu:0]) assigned value 1.\n\nERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUTargetFanSpeed' (meow:0[fan:0]) assigned value 99.\n\nERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUMemoryTransferRateOffset' (meow:0[gpu:0]) assigned value 1400.\n\nERROR: libXv setup error : libXv.so.1: cannot open shared object file: No such file or directory\n\n  Attribute 'GPUGraphicsClockOffset' (meow:0[gpu:0]) assigned value -200.\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"ERROR: libXv setup error "}]},{"type":"element","tag":"span","props":{"class":"ct-985020"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" libXv.so.1: cannot open shared object file: No such file or directory"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"  Attribute "}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":"'GPUFanControlState'"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" (meow:0[gpu:0]) assigned value 1."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"ERROR: libXv setup error "}]},{"type":"element","tag":"span","props":{"class":"ct-985020"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" libXv.so.1: cannot open shared object file: No such file or directory"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"  Attribute "}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":"'GPUTargetFanSpeed'"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" (meow:0[fan:0]) assigned value 99."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"ERROR: libXv setup error "}]},{"type":"element","tag":"span","props":{"class":"ct-985020"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" libXv.so.1: cannot open shared object file: No such file or directory"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"  Attribute "}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":"'GPUMemoryTransferRateOffset'"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" (meow:0[gpu:0]) assigned value 1400."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"ERROR: libXv setup error "}]},{"type":"element","tag":"span","props":{"class":"ct-985020"},"children":[{"type":"text","value":":"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" libXv.so.1: cannot open shared object file: No such file or directory"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"  Attribute "}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":"'GPUGraphicsClockOffset'"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" (meow:0[gpu:0]) assigned value -200."}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"执行后实时生效，前后数据可通过 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nvidia-smi -q | grep MHz"}]},{"type":"text","value":" 对比。"}]},{"type":"element","tag":"h2","props":{"id":"清理环境"},"children":[{"type":"text","value":"清理环境"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Xorg 可以关掉。"}]},{"type":"element","tag":"code","props":{"code":"$ ps -ef | grep xorg\nroot      9816 33061  0 04:55 pts/0    00:00:00 grep --color=auto xorg\nroot     47705 33061  0 03:38 tty7     00:00:14 /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch\n\n$ kill 47705\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"$ ps -ef "}]},{"type":"element","tag":"span","props":{"class":"ct-6c1c43"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" grep xorg"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"root      9816 33061  0 04:55 pts/0    00:00:00 grep --color=auto xorg"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"root     47705 33061  0 03:38 tty7     00:00:14 /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"$ "}]},{"type":"element","tag":"span","props":{"class":"ct-985020"},"children":[{"type":"text","value":"kill"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" 47705"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"tips"},"children":[{"type":"text","value":"Tips"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"不想在后台跑个 Xorg？可以用 xini 执行 nvidia-settings，配合 ansible 更优雅。"}]},{"type":"element","tag":"code","props":{"code":"#ubuntu\napt install xinit\n\n#centos\nyum install xorg-x11-xinit\n\nxinit /usr/bin/nvidia-settings -a [gpu:0]/GPUGraphicsClockOffset[4]=600 --  :0 -once\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-296805"},"children":[{"type":"text","value":"#ubuntu"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"apt install xinit"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-296805"},"children":[{"type":"text","value":"#centos"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"yum install xorg-x11-xinit"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"xinit /usr/bin/nvidia-settings -a [gpu:0]/GPUGraphicsClockOffset[4]=600 --  :0 -once"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"当然也可以给服务器接上显示器，再安装一个小巧的桌面环境，比如 Xfce，该有的依赖就都有了。"}]},{"type":"element","tag":"code","props":{"code":"sudo apt update\nsudo apt install xfce4 xfce4-goodies\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"sudo apt update"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"sudo apt install xfce4 xfce4-goodies"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此外，显示器一般都有 EDID 信息，包括显示器的分辨率、厂商名称与序号等，保存在显示器的 PROM 或 EEPROM 中。我们也可以给虚拟显示器整一个（强迫症必备"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/linuxhw/EDID/tree/master/Digital/Nvidia","rel":["nofollow"]},"children":[{"type":"text","value":"这里"}]},{"type":"text","value":"有整理好的 EDID 文件，随便找一个，比如 Nvidia Defaul，分辨率 1920x1080。"}]},{"type":"element","tag":"code","props":{"code":"$ sudo vim /etc/X11/edid.txt\n\n00 ff ff ff ff ff ff 00 3a c4 00 00 00 00 00 00\n2d 0c 01 03 80 20 12 00 ea a8 e0 99 57 4b 92 25\n1c 50 54 00 00 00 01 01 01 01 01 01 01 01 01 01\n01 01 01 01 01 01 02 3a 80 18 71 38 2d 40 30 20\n35 00 42 b5 10 01 00 18 00 00 00 fc 00 4e 76 69\n64 69 61 20 44 65 66 61 75 6c 00 00 00 fc 00 74\n20 46 6c 61 74 20 50 61 6e 65 6c 00 00 00 00 fd\n00 00 3d 1d 44 0f 00 00 20 20 20 20 20 00 00 1d\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"$ sudo vim /etc/X11/edid.txt"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"00 ff ff ff ff ff ff 00 3a c4 00 00 00 00 00 00"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"2d 0c 01 03 80 20 12 00 ea a8 e0 99 57 4b 92 25"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"1c 50 54 00 00 00 01 01 01 01 01 01 01 01 01 01"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"01 01 01 01 01 01 02 3a 80 18 71 38 2d 40 30 20"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"35 00 42 b5 10 01 00 18 00 00 00 "}]},{"type":"element","tag":"span","props":{"class":"ct-985020"},"children":[{"type":"text","value":"fc"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" 00 4e 76 69"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"64 69 61 20 44 65 66 61 75 6c 00 00 00 "}]},{"type":"element","tag":"span","props":{"class":"ct-985020"},"children":[{"type":"text","value":"fc"}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" 00 74"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"20 46 6c 61 74 20 50 61 6e 65 6c 00 00 00 00 fd"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"00 00 3d 1d 44 0f 00 00 20 20 20 20 20 00 00 1d"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 nvidia-xconfig 生成 Xorg 配置时添加自定义参数。"}]},{"type":"element","tag":"code","props":{"code":"sudo nvidia-xconfig -a --allow-empty-initial-configuration \\\n--use-display-device=None --virtual=1920x1080 \\\n--use-display-device=\"DFP-0\" --connected-monitor=\"DFP-0\" \\\n--custom-edid=\"DFP-0:/etc/X11/edid.txt\" --cool-bits=28\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"sudo nvidia-xconfig -a --allow-empty-initial-configuration \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"--use-display-device=None --virtual=1920x1080 \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"--use-display-device="}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":"\"DFP-0\""}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" --connected-monitor="}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":"\"DFP-0\""}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":"--custom-edid="}]},{"type":"element","tag":"span","props":{"class":"ct-9e0b6a"},"children":[{"type":"text","value":"\"DFP-0:/etc/X11/edid.txt\""}]},{"type":"element","tag":"span","props":{"class":"ct-db5bbe"},"children":[{"type":"text","value":" --cool-bits=28"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"此时可以安装 VNC 来使用 nvidia-settings 的图形界面，但都到这一步了为何不直接装桌面版 Ubuntu 呢 (ーー゛)"}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-985020{color:#0550AE}.ct-9e0b6a{color:#0A3069}.ct-6c1c43{color:#CF222E}.ct-db5bbe{color:#24292F}.ct-296805{color:#6E7781}.dark .ct-296805{color:#8B949E}.dark .ct-db5bbe{color:#C9D1D9}.dark .ct-6c1c43{color:#FF7B72}.dark .ct-9e0b6a{color:#A5D6FF}.dark .ct-985020{color:#79C0FF}"}]}],"toc":{"title":"","searchDepth":5,"depth":5,"links":[{"id":"环境准备","depth":2,"text":"环境准备"},{"id":"如何食用","depth":2,"text":"如何食用"},{"id":"清理环境","depth":2,"text":"清理环境"},{"id":"tips","depth":2,"text":"Tips"}]}},"_type":"markdown","_id":"content:blog:make-nvidia-explosion.md","_source":"content","_file":"blog/make-nvidia-explosion.md","_extension":"md"},{"_path":"/blog/pxe-centos","_dir":"blog","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"批量安装 CentOS 7","description":"预启动执行环境（Preboot eXecution Environment，PXE）提供了一种使用网络接口（Network Interface）启动计算机的机制，可用于安装操作系统。","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"概述"},"children":[{"type":"text","value":"概述"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"预启动执行环境（Preboot eXecution Environment，PXE）提供了一种使用网络接口（Network Interface）启动计算机的机制，可用于安装操作系统。流程一般如下。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端从 Network 启动，发送 DHCP 请求。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DHCP 服务器发送一个带有 next-server 信息的响应。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端发送 DHCPREQUEST/DHCPINFORM 请求。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DHCP 服务器发送 TFTP 服务器地址和所需的文件名。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端从 TFTP 服务器下载这个文件，一般是很小的引导文件。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pxelinux/grub 读取配置文件，下载相关文件。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"进入安装程序，下载 Anaconda 的 Kickstart 自动应答脚本，开始安装。"}]}]},{"type":"element","tag":"h2","props":{"id":"准备工作"},"children":[{"type":"text","value":"准备工作"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下载 CentOS 镜像，文中使用的是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"CentOS-7-x86_64-Minimal-2003.iso"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Optional:"}]},{"type":"text","value":" 手动装一台机器（安装程序选择非图形界面，Troubleshooting -> Install CentOS Linux 7 in basic graphics mode）。进入系统，在"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$HOME"}]},{"type":"text","value":"目录下有个 Kickstart 文件，里面是安装程序自动生成的脚本，保存起来作为模板。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选一台机器用作 PXE Server（比如上面装好的），开放 tftp 和 http 端口（或者禁用防火墙），关闭 SELinux（会阻止从网络访问本地文件）。"}]},{"type":"element","tag":"code","props":{"code":"systemctl disable firewalld.service --now\n\nsed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\nsetenforce 0\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"systemctl disable firewalld.service --now\n\nsed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\nsetenforce 0\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果路由器是 DHCP 模式，最好先从交换机上拔掉，或者改为静态 IP 模式（如果机器都接在路由器上），因为内网中存在多个 DHCP Server 会相互干扰。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Optional:"}]},{"type":"text","value":" 也可以用 Dnsmasq 替代 dhcp 和 tftp-server，具体参见 "},{"type":"element","tag":"a","props":{"href":"/note/linux/pxe-ubuntu.html"},"children":[{"type":"text","value":"Ubuntu 篇"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"h2","props":{"id":"dhcp-server"},"children":[{"type":"text","value":"DHCP Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"支持 PXE 启动的网卡会内置 DHCP Client，用于从内网 PXE Server 获取 IP，顺便查询 TFTP Server 的 IP。那我们第一步就是在 PXE Server 上安装 DHCP Server 为 PXE 设备分配 IP。"}]},{"type":"element","tag":"code","props":{"code":"yum install dhcp -y\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yum install dhcp -y\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"考虑到服务器配置各不相同，安装方法肯定也有所不同，但装系统也只需在意系统盘的区别。比如 NVMe SSD 或 SATA SSD，前者仅支持 UEFI 引导，后者可用 UEFI 或 Legacy，但机器只支持 Legacy PXE 启动。想一次性装完所有机器，可以在 DHCP Server 的配置中加入判断，区分客户端是普通 DHCP 还是 UEFI PXE 或是 Legacy PXE。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"dhcpd"}]},{"type":"text","value":"的配置位于"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/dhcp/dhcpd.conf"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"option pxe-system-type code 93 = unsigned integer 16;\n\nsubnet 172.16.22.0 netmask 255.255.255.0 {\n  range 172.16.22.2 172.16.22.254;\n  option routers 172.16.22.1;\n  option subnet-mask 255.255.255.0;\n\n  next-server 172.16.22.1;\n\n  if option pxe-system-type = 00:07 {      \n    filename \"uefi/shim.efi\";\n  } else if option pxe-system-type = 00:09 {\n    filename \"uefi/shim.efi\";\n  } else {\n    filename \"pxelinux.0\";\n  }\n}\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"option pxe-system-type code 93 = unsigned integer 16;\n\nsubnet 172.16.22.0 netmask 255.255.255.0 {\n  range 172.16.22.2 172.16.22.254;\n  option routers 172.16.22.1;\n  option subnet-mask 255.255.255.0;\n\n  next-server 172.16.22.1;\n\n  if option pxe-system-type = 00:07 {      \n    filename \"uefi/shim.efi\";\n  } else if option pxe-system-type = 00:09 {\n    filename \"uefi/shim.efi\";\n  } else {\n    filename \"pxelinux.0\";\n  }\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"next-server"}]},{"type":"text","value":" 用于提示 TFTP Server 的 IP 地址，可以是本机。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"shim"}]},{"type":"text","value":" 是 Linux 的引导程序，支持 EFI 引导，如果检测到 UEFI PXE 就用这个。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"pxelinux.0"}]},{"type":"text","value":" 也是 Linux 的引导程序（SYSLINUX），用于 Legacy PXE。"}]},{"type":"element","tag":"h2","props":{"id":"tftp-server"},"children":[{"type":"text","value":"TFTP Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"PXE 支持 TFTP 协议，我们把引导程序（shim & pxelinux.0）放在 TFTP 服务器对应目录。"}]},{"type":"element","tag":"code","props":{"code":"yum install xinetd tftp-server –y\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yum install xinetd tftp-server –y\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"xinetd 是 TFTP 的守护进程，启动 xinetd 就能拉起 TFTP。"}]},{"type":"element","tag":"code","props":{"code":"systemctl start xinetd\nsystemctl enable xinetd\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"systemctl start xinetd\nsystemctl enable xinetd\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TFTP 服务器默认根目录在"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/tftpboot"}]},{"type":"text","value":"，后面会把引导文件放这里。"}]},{"type":"element","tag":"h2","props":{"id":"http-server"},"children":[{"type":"text","value":"HTTP Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TFTP 基于小块（512KB）的 UDP 协议传输数据，速度很慢，只适合传输小文件。软件包等大文件可以换用 NGINX 之类的 HTTP Server 下载。"}]},{"type":"element","tag":"code","props":{"code":"yum install epel-release\nyum install nginx\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yum install epel-release\nyum install nginx\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"默认配置文件在"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/nginx/nginx.conf"}]},{"type":"text","value":"，在 location 中添加"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"autoindex on"}]},{"type":"text","value":"配置打开文件索引，大文件就放在网络根目录下。"}]},{"type":"element","tag":"code","props":{"code":"server {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  _;\n    root         /usr/share/nginx/html;\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        autoindex on;\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"server {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  _;\n    root         /usr/share/nginx/html;\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        autoindex on;\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"uefi-引导"},"children":[{"type":"text","value":"UEFI 引导"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"用 yum 下载 CentOS 7 的 UEFI 引导软件包。"}]},{"type":"element","tag":"code","props":{"code":"yum install grub2-efi-x64 shim-x64\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yum install grub2-efi-x64 shim-x64\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 TFTP 服务器根目录下新建目录，用于存放 uefi 启动文件。"}]},{"type":"element","tag":"code","props":{"code":"mkdir /var/lib/tftpboot/uefi\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"mkdir /var/lib/tftpboot/uefi\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"复制相关文件，修改文件权限。"}]},{"type":"element","tag":"code","props":{"code":"cp -p /boot/efi/EFI/centos/*.efi /var/lib/tftpboot/uefi/\nchmod 755 /var/lib/tftpboot/uefi/*.efi\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cp -p /boot/efi/EFI/centos/*.efi /var/lib/tftpboot/uefi/\nchmod 755 /var/lib/tftpboot/uefi/*.efi\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Optional:"}]},{"type":"text","value":" 或者直接从系统镜像复制过来也行，方法如下。"}]},{"type":"element","tag":"code","props":{"code":"mkdir /centos\nmkdir $HOME/uefi_tmp\nmount -t iso9660 CentOS-7-x86_64-Minimal-2003.iso /centos -o loop,ro\ncp -pr /centos/Packages/shim-version-architecture.rpm $HOME/uefi_tmp\ncp -pr /centos/Packages/grub2-efi-version-architecture.rpm $HOME/uefi_tmp\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"mkdir /centos\nmkdir $HOME/uefi_tmp\nmount -t iso9660 CentOS-7-x86_64-Minimal-2003.iso /centos -o loop,ro\ncp -pr /centos/Packages/shim-version-architecture.rpm $HOME/uefi_tmp\ncp -pr /centos/Packages/grub2-efi-version-architecture.rpm $HOME/uefi_tmp\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"解压 rpm 软件包。"}]},{"type":"element","tag":"code","props":{"code":"cd $HOME/uefi_tmp\nrpm2cpio shim-version-architecture.rpm | cpio -dimv\nrpm2cpio grub2-efi-version-architecture.rpm | cpio -dimv\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd $HOME/uefi_tmp\nrpm2cpio shim-version-architecture.rpm | cpio -dimv\nrpm2cpio grub2-efi-version-architecture.rpm | cpio -dimv\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"复制 EFI 引导程序到 TFTP 目录。"}]},{"type":"element","tag":"code","props":{"code":"cp $HOME/uefi_tmp/boot/efi/EFI/centos/shim.efi /var/lib/tftpboot/uefi/\ncp $HOME/uefi_tmp/boot/efi/EFI/centos/grubx64.efi /var/lib/tftpboot/uefi/\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cp $HOME/uefi_tmp/boot/efi/EFI/centos/shim.efi /var/lib/tftpboot/uefi/\ncp $HOME/uefi_tmp/boot/efi/EFI/centos/grubx64.efi /var/lib/tftpboot/uefi/\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在下面的栗子中，Vmlinuz 是 Linux 内核可执行文件，它将 OS 加载到内存中，这样就可以启动机器了。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"inst.ks"}]},{"type":"text","value":"是 Kickstart 自动应答脚本。Initrd 镜像用来初始化 RAM 磁盘，然后将其挂载为根文件系统，并从中运行 CentOS 安装程序。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"grubx64.efi"}]},{"type":"text","value":"同级目录新建 GRUB 配置文件"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/tftpboot/uefi/grub.cfg"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"set default=\"0\"\n\nfunction load_video {\n  insmod efi_gop\n  insmod efi_uga\n  insmod video_bochs\n  insmod video_cirrus\n  insmod all_video\n}\n\nload_video\nset gfxpayload=keep\ninsmod gzio\ninsmod part_gpt\ninsmod ext2\nset timeout=6\n\nmenuentry 'Install CentOS Linux 7.8' --class fedora --class gnu-linux --class gnu --class os {\n  linuxefi CentOS-7.8/vmlinuz ip=dhcp inst.ks=http://172.16.22.1:80/supermicro.cfg\n  initrdefi CentOS-7.8/initrd.img\n}\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"set default=\"0\"\n\nfunction load_video {\n  insmod efi_gop\n  insmod efi_uga\n  insmod video_bochs\n  insmod video_cirrus\n  insmod all_video\n}\n\nload_video\nset gfxpayload=keep\ninsmod gzio\ninsmod part_gpt\ninsmod ext2\nset timeout=6\n\nmenuentry 'Install CentOS Linux 7.8' --class fedora --class gnu-linux --class gnu --class os {\n  linuxefi CentOS-7.8/vmlinuz ip=dhcp inst.ks=http://172.16.22.1:80/supermicro.cfg\n  initrdefi CentOS-7.8/initrd.img\n}\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"legacy-引导"},"children":[{"type":"text","value":"Legacy 引导"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装 syslinux，把引导程序复制到 TFTP 根目录。"}]},{"type":"element","tag":"code","props":{"code":"yum -y install syslinux\ncp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yum -y install syslinux\ncp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"创建 pxelinux 的配置文件。"}]},{"type":"element","tag":"code","props":{"code":"mkdir /var/lib/tftpboot/pxelinux.cfg\nvim /var/lib/tftpboot/pxelinux.cfg/default\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"mkdir /var/lib/tftpboot/pxelinux.cfg\nvim /var/lib/tftpboot/pxelinux.cfg/default\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"内容如下。"}]},{"type":"element","tag":"code","props":{"code":"default vesamenu.c32\nprompt 1\ntimeout 6\n\ndisplay boot.msg\n\nlabel linux\n  menu label ^Install system\n  menu default\n  kernel CentOS-7.8/vmlinuz\n  append initrd=CentOS-7.8/initrd.img ip=dhcp ks=http://172.16.22.1/supermicro.cfg\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"default vesamenu.c32\nprompt 1\ntimeout 6\n\ndisplay boot.msg\n\nlabel linux\n  menu label ^Install system\n  menu default\n  kernel CentOS-7.8/vmlinuz\n  append initrd=CentOS-7.8/initrd.img ip=dhcp ks=http://172.16.22.1/supermicro.cfg\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这里依然能看到 vmlinuz & initrd & ks 熟悉的身影，如需修改可参考上一步说明。"}]},{"type":"element","tag":"h2","props":{"id":"kickstart"},"children":[{"type":"text","value":"Kickstart"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"建议先用准备好的镜像在非图形界面下手动安装一台，复制 $HOME 目录下自动生成的"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"anaconda-ks.cfg"}]},{"type":"text","value":"脚本作为参考。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下面的脚本中，系统将从网络安装，"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"url"}]},{"type":"text","value":"是内网的安装源，"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"rootpw"}]},{"type":"text","value":"是 root 用户密码。系统盘是"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nvme1n1"}]},{"type":"text","value":"，使用 LVM，默认分区表。详细的语法说明参见"},{"type":"element","tag":"a","props":{"href":"https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax","rel":["nofollow"]},"children":[{"type":"text","value":"官方文档"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"#version=DEVEL\ninstall\n# System authorization information\nauth --enableshadow --passalgo=sha512\n# Use text mode install\ntext\n# Run the Setup Agent on first boot\nfirstboot --enable\nignoredisk --only-use=nvme1n1\n# Keyboard layouts\nkeyboard --vckeymap=us --xlayouts=''\n# System language\nlang en_US.UTF-8\n# Use network installation\nurl --url=\"http://172.16.22.1/CentOS-7.8\"\n# Reboot after installation\nreboot\n\n# Network information\nnetwork --bootproto=dhcp --device=eno1 --onboot=off --ipv6=auto --no-activate\nnetwork --bootproto=dhcp --device=eno2 --onboot=off --ipv6=auto\nnetwork --bootproto=static --device=enp33s0 --onboot=yes --ip 172.16.1.10 --netmask 255.255.0.0 --gateway 172.16.255.254 --ipv6=auto --nameserver 114.114.114.114\n# Firewall configuration\nfirewall --disable\n\n#Root password\nrootpw --plaintext \"123@def\"\n# SELinux configuration\nselinux --disabled\n# System services\nservices --enabled=\"chronyd\"\n# Do not configure the X Window System\nskipx\n# System timezone\ntimezone Asia/Shanghai --isUtc\n# System bootloader configuration\nbootloader --append=\" crashkernel=auto\" --location=mbr --boot-drive=nvme1n1\nautopart\n# Partition clearing information\nclearpart --all --initlabel --drives=nvme1n1\n\n%packages\n@core\nchrony\nkexec-tools\n\n%end\n\n%addon com_redhat_kdump --enable --reserve-mb='auto'\n\n%end\n\n%anaconda\npwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty\npwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok\npwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty\n%end\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#version=DEVEL\ninstall\n# System authorization information\nauth --enableshadow --passalgo=sha512\n# Use text mode install\ntext\n# Run the Setup Agent on first boot\nfirstboot --enable\nignoredisk --only-use=nvme1n1\n# Keyboard layouts\nkeyboard --vckeymap=us --xlayouts=''\n# System language\nlang en_US.UTF-8\n# Use network installation\nurl --url=\"http://172.16.22.1/CentOS-7.8\"\n# Reboot after installation\nreboot\n\n# Network information\nnetwork --bootproto=dhcp --device=eno1 --onboot=off --ipv6=auto --no-activate\nnetwork --bootproto=dhcp --device=eno2 --onboot=off --ipv6=auto\nnetwork --bootproto=static --device=enp33s0 --onboot=yes --ip 172.16.1.10 --netmask 255.255.0.0 --gateway 172.16.255.254 --ipv6=auto --nameserver 114.114.114.114\n# Firewall configuration\nfirewall --disable\n\n#Root password\nrootpw --plaintext \"123@def\"\n# SELinux configuration\nselinux --disabled\n# System services\nservices --enabled=\"chronyd\"\n# Do not configure the X Window System\nskipx\n# System timezone\ntimezone Asia/Shanghai --isUtc\n# System bootloader configuration\nbootloader --append=\" crashkernel=auto\" --location=mbr --boot-drive=nvme1n1\nautopart\n# Partition clearing information\nclearpart --all --initlabel --drives=nvme1n1\n\n%packages\n@core\nchrony\nkexec-tools\n\n%end\n\n%addon com_redhat_kdump --enable --reserve-mb='auto'\n\n%end\n\n%anaconda\npwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty\npwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok\npwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty\n%end\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"开始安装"},"children":[{"type":"text","value":"开始安装"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"通过 BIOS 或 IPMI，将机器首选启动项改为 PXE，重启机器就能看到 CentOS 的安装程序，无需操作，等待安装"},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"失败"}]},{"type":"text","value":"完成（ε = = (づ′▽`)づ"}]}]},"date":"2020-10-18T10:20:43.000Z","tags":["linux","pxe"],"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"概述"},"children":[{"type":"text","value":"概述"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"预启动执行环境（Preboot eXecution Environment，PXE）提供了一种使用网络接口（Network Interface）启动计算机的机制，可用于安装操作系统。流程一般如下。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端从 Network 启动，发送 DHCP 请求。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DHCP 服务器发送一个带有 next-server 信息的响应。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端发送 DHCPREQUEST/DHCPINFORM 请求。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DHCP 服务器发送 TFTP 服务器地址和所需的文件名。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端从 TFTP 服务器下载这个文件，一般是很小的引导文件。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pxelinux/grub 读取配置文件，下载相关文件。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"进入安装程序，下载 Anaconda 的 Kickstart 自动应答脚本，开始安装。"}]}]},{"type":"element","tag":"h2","props":{"id":"准备工作"},"children":[{"type":"text","value":"准备工作"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下载 CentOS 镜像，文中使用的是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"CentOS-7-x86_64-Minimal-2003.iso"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Optional:"}]},{"type":"text","value":" 手动装一台机器（安装程序选择非图形界面，Troubleshooting -> Install CentOS Linux 7 in basic graphics mode）。进入系统，在"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$HOME"}]},{"type":"text","value":"目录下有个 Kickstart 文件，里面是安装程序自动生成的脚本，保存起来作为模板。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选一台机器用作 PXE Server（比如上面装好的），开放 tftp 和 http 端口（或者禁用防火墙），关闭 SELinux（会阻止从网络访问本地文件）。"}]},{"type":"element","tag":"code","props":{"code":"systemctl disable firewalld.service --now\n\nsed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config\nsetenforce 0\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"systemctl disable firewalld.service --now"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"sed -i "}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"'s/^SELINUX=.*/SELINUX=disabled/'"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" /etc/selinux/config"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"setenforce 0"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果路由器是 DHCP 模式，最好先从交换机上拔掉，或者改为静态 IP 模式（如果机器都接在路由器上），因为内网中存在多个 DHCP Server 会相互干扰。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Optional:"}]},{"type":"text","value":" 也可以用 Dnsmasq 替代 dhcp 和 tftp-server，具体参见 "},{"type":"element","tag":"a","props":{"href":"/note/linux/pxe-ubuntu.html"},"children":[{"type":"text","value":"Ubuntu 篇"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"h2","props":{"id":"dhcp-server"},"children":[{"type":"text","value":"DHCP Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"支持 PXE 启动的网卡会内置 DHCP Client，用于从内网 PXE Server 获取 IP，顺便查询 TFTP Server 的 IP。那我们第一步就是在 PXE Server 上安装 DHCP Server 为 PXE 设备分配 IP。"}]},{"type":"element","tag":"code","props":{"code":"yum install dhcp -y\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"yum install dhcp -y"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"考虑到服务器配置各不相同，安装方法肯定也有所不同，但装系统也只需在意系统盘的区别。比如 NVMe SSD 或 SATA SSD，前者仅支持 UEFI 引导，后者可用 UEFI 或 Legacy，但机器只支持 Legacy PXE 启动。想一次性装完所有机器，可以在 DHCP Server 的配置中加入判断，区分客户端是普通 DHCP 还是 UEFI PXE 或是 Legacy PXE。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"dhcpd"}]},{"type":"text","value":"的配置位于"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/dhcp/dhcpd.conf"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"option pxe-system-type code 93 = unsigned integer 16;\n\nsubnet 172.16.22.0 netmask 255.255.255.0 {\n  range 172.16.22.2 172.16.22.254;\n  option routers 172.16.22.1;\n  option subnet-mask 255.255.255.0;\n\n  next-server 172.16.22.1;\n\n  if option pxe-system-type = 00:07 {      \n    filename \"uefi/shim.efi\";\n  } else if option pxe-system-type = 00:09 {\n    filename \"uefi/shim.efi\";\n  } else {\n    filename \"pxelinux.0\";\n  }\n}\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"option pxe-system-type code 93 = unsigned integer 16"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"subnet 172.16.22.0 netmask 255.255.255.0 {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  range 172.16.22.2 172.16.22.254"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  option routers 172.16.22.1"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  option subnet-mask 255.255.255.0"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  next-server 172.16.22.1"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" option pxe-system-type = 00:07 {      "}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    filename "}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"\"uefi/shim.efi\""}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  } "}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"else"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" option pxe-system-type = 00:09 {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    filename "}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"\"uefi/shim.efi\""}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  } "}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"else"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    filename "}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"\"pxelinux.0\""}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  }"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"next-server"}]},{"type":"text","value":" 用于提示 TFTP Server 的 IP 地址，可以是本机。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"shim"}]},{"type":"text","value":" 是 Linux 的引导程序，支持 EFI 引导，如果检测到 UEFI PXE 就用这个。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"pxelinux.0"}]},{"type":"text","value":" 也是 Linux 的引导程序（SYSLINUX），用于 Legacy PXE。"}]},{"type":"element","tag":"h2","props":{"id":"tftp-server"},"children":[{"type":"text","value":"TFTP Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"PXE 支持 TFTP 协议，我们把引导程序（shim & pxelinux.0）放在 TFTP 服务器对应目录。"}]},{"type":"element","tag":"code","props":{"code":"yum install xinetd tftp-server –y\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"yum install xinetd tftp-server –y"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"xinetd 是 TFTP 的守护进程，启动 xinetd 就能拉起 TFTP。"}]},{"type":"element","tag":"code","props":{"code":"systemctl start xinetd\nsystemctl enable xinetd\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"systemctl start xinetd"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"systemctl "}]},{"type":"element","tag":"span","props":{"class":"ct-48cb96"},"children":[{"type":"text","value":"enable"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" xinetd"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TFTP 服务器默认根目录在"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/tftpboot"}]},{"type":"text","value":"，后面会把引导文件放这里。"}]},{"type":"element","tag":"h2","props":{"id":"http-server"},"children":[{"type":"text","value":"HTTP Server"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TFTP 基于小块（512KB）的 UDP 协议传输数据，速度很慢，只适合传输小文件。软件包等大文件可以换用 NGINX 之类的 HTTP Server 下载。"}]},{"type":"element","tag":"code","props":{"code":"yum install epel-release\nyum install nginx\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"yum install epel-release"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"yum install nginx"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"默认配置文件在"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/etc/nginx/nginx.conf"}]},{"type":"text","value":"，在 location 中添加"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"autoindex on"}]},{"type":"text","value":"配置打开文件索引，大文件就放在网络根目录下。"}]},{"type":"element","tag":"code","props":{"code":"server {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  _;\n    root         /usr/share/nginx/html;\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n        autoindex on;\n    }\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"server {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    listen       80 default_server"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    listen       [::]:80 default_server"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    server_name  _"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    root         /usr/share/nginx/html"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Load configuration files for the default server block."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    include /etc/nginx/default.d/"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":".conf"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    location / {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"        autoindex on"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    }"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    error_page 404 /404.html"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"        location = /40x.html {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    }"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    error_page 500 502 503 504 /50x.html"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"        location = /50x.html {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"    }"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"uefi-引导"},"children":[{"type":"text","value":"UEFI 引导"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"用 yum 下载 CentOS 7 的 UEFI 引导软件包。"}]},{"type":"element","tag":"code","props":{"code":"yum install grub2-efi-x64 shim-x64\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"yum install grub2-efi-x64 shim-x64"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 TFTP 服务器根目录下新建目录，用于存放 uefi 启动文件。"}]},{"type":"element","tag":"code","props":{"code":"mkdir /var/lib/tftpboot/uefi\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"mkdir /var/lib/tftpboot/uefi"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"复制相关文件，修改文件权限。"}]},{"type":"element","tag":"code","props":{"code":"cp -p /boot/efi/EFI/centos/*.efi /var/lib/tftpboot/uefi/\nchmod 755 /var/lib/tftpboot/uefi/*.efi\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"cp -p /boot/efi/EFI/centos/"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":".efi /var/lib/tftpboot/uefi/"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"chmod 755 /var/lib/tftpboot/uefi/"}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"*"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":".efi"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Optional:"}]},{"type":"text","value":" 或者直接从系统镜像复制过来也行，方法如下。"}]},{"type":"element","tag":"code","props":{"code":"mkdir /centos\nmkdir $HOME/uefi_tmp\nmount -t iso9660 CentOS-7-x86_64-Minimal-2003.iso /centos -o loop,ro\ncp -pr /centos/Packages/shim-version-architecture.rpm $HOME/uefi_tmp\ncp -pr /centos/Packages/grub2-efi-version-architecture.rpm $HOME/uefi_tmp\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"mkdir /centos"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"mkdir $HOME/uefi_tmp"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"mount -t iso9660 CentOS-7-x86_64-Minimal-2003.iso /centos -o loop,ro"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"cp -pr /centos/Packages/shim-version-architecture.rpm $HOME/uefi_tmp"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"cp -pr /centos/Packages/grub2-efi-version-architecture.rpm $HOME/uefi_tmp"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"解压 rpm 软件包。"}]},{"type":"element","tag":"code","props":{"code":"cd $HOME/uefi_tmp\nrpm2cpio shim-version-architecture.rpm | cpio -dimv\nrpm2cpio grub2-efi-version-architecture.rpm | cpio -dimv\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-48cb96"},"children":[{"type":"text","value":"cd"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" $HOME/uefi_tmp"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"rpm2cpio shim-version-architecture.rpm "}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" cpio -dimv"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"rpm2cpio grub2-efi-version-architecture.rpm "}]},{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" cpio -dimv"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"复制 EFI 引导程序到 TFTP 目录。"}]},{"type":"element","tag":"code","props":{"code":"cp $HOME/uefi_tmp/boot/efi/EFI/centos/shim.efi /var/lib/tftpboot/uefi/\ncp $HOME/uefi_tmp/boot/efi/EFI/centos/grubx64.efi /var/lib/tftpboot/uefi/\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"cp $HOME/uefi_tmp/boot/efi/EFI/centos/shim.efi /var/lib/tftpboot/uefi/"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"cp $HOME/uefi_tmp/boot/efi/EFI/centos/grubx64.efi /var/lib/tftpboot/uefi/"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在下面的栗子中，Vmlinuz 是 Linux 内核可执行文件，它将 OS 加载到内存中，这样就可以启动机器了。"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"inst.ks"}]},{"type":"text","value":"是 Kickstart 自动应答脚本。Initrd 镜像用来初始化 RAM 磁盘，然后将其挂载为根文件系统，并从中运行 CentOS 安装程序。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"grubx64.efi"}]},{"type":"text","value":"同级目录新建 GRUB 配置文件"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var/lib/tftpboot/uefi/grub.cfg"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"set default=\"0\"\n\nfunction load_video {\n  insmod efi_gop\n  insmod efi_uga\n  insmod video_bochs\n  insmod video_cirrus\n  insmod all_video\n}\n\nload_video\nset gfxpayload=keep\ninsmod gzio\ninsmod part_gpt\ninsmod ext2\nset timeout=6\n\nmenuentry 'Install CentOS Linux 7.8' --class fedora --class gnu-linux --class gnu --class os {\n  linuxefi CentOS-7.8/vmlinuz ip=dhcp inst.ks=http://172.16.22.1:80/supermicro.cfg\n  initrdefi CentOS-7.8/initrd.img\n}\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-48cb96"},"children":[{"type":"text","value":"set"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" default="}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"\"0\""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-e15f86"},"children":[{"type":"text","value":"function"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-22ba53"},"children":[{"type":"text","value":"load_video"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  insmod efi_gop"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  insmod efi_uga"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  insmod video_bochs"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  insmod video_cirrus"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  insmod all_video"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"load_video"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-48cb96"},"children":[{"type":"text","value":"set"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" gfxpayload=keep"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"insmod gzio"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"insmod part_gpt"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"insmod ext2"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-48cb96"},"children":[{"type":"text","value":"set"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" timeout=6"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"menuentry "}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"'Install CentOS Linux 7.8'"}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" --class fedora --class gnu-linux --class gnu --class os {"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  linuxefi CentOS-7.8/vmlinuz ip=dhcp inst.ks=http://172.16.22.1:80/supermicro.cfg"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  initrdefi CentOS-7.8/initrd.img"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"legacy-引导"},"children":[{"type":"text","value":"Legacy 引导"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装 syslinux，把引导程序复制到 TFTP 根目录。"}]},{"type":"element","tag":"code","props":{"code":"yum -y install syslinux\ncp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"yum -y install syslinux"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"创建 pxelinux 的配置文件。"}]},{"type":"element","tag":"code","props":{"code":"mkdir /var/lib/tftpboot/pxelinux.cfg\nvim /var/lib/tftpboot/pxelinux.cfg/default\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"mkdir /var/lib/tftpboot/pxelinux.cfg"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"vim /var/lib/tftpboot/pxelinux.cfg/default"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"内容如下。"}]},{"type":"element","tag":"code","props":{"code":"default vesamenu.c32\nprompt 1\ntimeout 6\n\ndisplay boot.msg\n\nlabel linux\n  menu label ^Install system\n  menu default\n  kernel CentOS-7.8/vmlinuz\n  append initrd=CentOS-7.8/initrd.img ip=dhcp ks=http://172.16.22.1/supermicro.cfg\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"default vesamenu.c32"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"prompt 1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"timeout 6"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"display boot.msg"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"label linux"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  menu label ^Install system"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  menu default"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  kernel CentOS-7.8/vmlinuz"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"  append initrd=CentOS-7.8/initrd.img ip=dhcp ks=http://172.16.22.1/supermicro.cfg"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这里依然能看到 vmlinuz & initrd & ks 熟悉的身影，如需修改可参考上一步说明。"}]},{"type":"element","tag":"h2","props":{"id":"kickstart"},"children":[{"type":"text","value":"Kickstart"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"建议先用准备好的镜像在非图形界面下手动安装一台，复制 $HOME 目录下自动生成的"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"anaconda-ks.cfg"}]},{"type":"text","value":"脚本作为参考。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下面的脚本中，系统将从网络安装，"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"url"}]},{"type":"text","value":"是内网的安装源，"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"rootpw"}]},{"type":"text","value":"是 root 用户密码。系统盘是"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nvme1n1"}]},{"type":"text","value":"，使用 LVM，默认分区表。详细的语法说明参见"},{"type":"element","tag":"a","props":{"href":"https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/installation_guide/sect-kickstart-syntax","rel":["nofollow"]},"children":[{"type":"text","value":"官方文档"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"#version=DEVEL\ninstall\n# System authorization information\nauth --enableshadow --passalgo=sha512\n# Use text mode install\ntext\n# Run the Setup Agent on first boot\nfirstboot --enable\nignoredisk --only-use=nvme1n1\n# Keyboard layouts\nkeyboard --vckeymap=us --xlayouts=''\n# System language\nlang en_US.UTF-8\n# Use network installation\nurl --url=\"http://172.16.22.1/CentOS-7.8\"\n# Reboot after installation\nreboot\n\n# Network information\nnetwork --bootproto=dhcp --device=eno1 --onboot=off --ipv6=auto --no-activate\nnetwork --bootproto=dhcp --device=eno2 --onboot=off --ipv6=auto\nnetwork --bootproto=static --device=enp33s0 --onboot=yes --ip 172.16.1.10 --netmask 255.255.0.0 --gateway 172.16.255.254 --ipv6=auto --nameserver 114.114.114.114\n# Firewall configuration\nfirewall --disable\n\n#Root password\nrootpw --plaintext \"123@def\"\n# SELinux configuration\nselinux --disabled\n# System services\nservices --enabled=\"chronyd\"\n# Do not configure the X Window System\nskipx\n# System timezone\ntimezone Asia/Shanghai --isUtc\n# System bootloader configuration\nbootloader --append=\" crashkernel=auto\" --location=mbr --boot-drive=nvme1n1\nautopart\n# Partition clearing information\nclearpart --all --initlabel --drives=nvme1n1\n\n%packages\n@core\nchrony\nkexec-tools\n\n%end\n\n%addon com_redhat_kdump --enable --reserve-mb='auto'\n\n%end\n\n%anaconda\npwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty\npwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok\npwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty\n%end\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"#version=DEVEL"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"install"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# System authorization information"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"auth --enableshadow --passalgo=sha512"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Use text mode install"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"text"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Run the Setup Agent on first boot"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"firstboot --enable"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"ignoredisk --only-use=nvme1n1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Keyboard layouts"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"keyboard --vckeymap=us --xlayouts="}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"''"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# System language"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"lang en_US.UTF-8"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Use network installation"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"url --url="}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"\"http://172.16.22.1/CentOS-7.8\""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Reboot after installation"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"reboot"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Network information"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"network --bootproto=dhcp --device=eno1 --onboot=off --ipv6=auto --no-activate"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"network --bootproto=dhcp --device=eno2 --onboot=off --ipv6=auto"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"network --bootproto=static --device=enp33s0 --onboot=yes --ip 172.16.1.10 --netmask 255.255.0.0 --gateway 172.16.255.254 --ipv6=auto --nameserver 114.114.114.114"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Firewall configuration"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"firewall --disable"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"#Root password"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"rootpw --plaintext "}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"\"123@def\""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# SELinux configuration"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"selinux --disabled"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# System services"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"services --enabled="}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"\"chronyd\""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Do not configure the X Window System"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"skipx"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# System timezone"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"timezone Asia/Shanghai --isUtc"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# System bootloader configuration"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"bootloader --append="}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"\" crashkernel=auto\""}]},{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":" --location=mbr --boot-drive=nvme1n1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"autopart"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-8a07f4"},"children":[{"type":"text","value":"# Partition clearing information"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"clearpart --all --initlabel --drives=nvme1n1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"%packages"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"@core"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"chrony"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"kexec-tools"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"%end"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"%addon com_redhat_kdump --enable --reserve-mb="}]},{"type":"element","tag":"span","props":{"class":"ct-a9412a"},"children":[{"type":"text","value":"'auto'"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"%end"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"%anaconda"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5483b6"},"children":[{"type":"text","value":"%end"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"开始安装"},"children":[{"type":"text","value":"开始安装"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"通过 BIOS 或 IPMI，将机器首选启动项改为 PXE，重启机器就能看到 CentOS 的安装程序，无需操作，等待安装"},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"失败"}]},{"type":"text","value":"完成（ε = = (づ′▽`)づ"}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-22ba53{color:#8250DF}.ct-8a07f4{color:#6E7781}.ct-48cb96{color:#0550AE}.ct-e15f86{color:#CF222E}.ct-a9412a{color:#0A3069}.ct-5483b6{color:#24292F}.dark .ct-5483b6{color:#C9D1D9}.dark .ct-a9412a{color:#A5D6FF}.dark .ct-e15f86{color:#FF7B72}.dark .ct-48cb96{color:#79C0FF}.dark .ct-8a07f4{color:#8B949E}.dark .ct-22ba53{color:#D2A8FF}"}]}],"toc":{"title":"","searchDepth":5,"depth":5,"links":[{"id":"概述","depth":2,"text":"概述"},{"id":"准备工作","depth":2,"text":"准备工作"},{"id":"dhcp-server","depth":2,"text":"DHCP Server"},{"id":"tftp-server","depth":2,"text":"TFTP Server"},{"id":"http-server","depth":2,"text":"HTTP Server"},{"id":"uefi-引导","depth":2,"text":"UEFI 引导"},{"id":"legacy-引导","depth":2,"text":"Legacy 引导"},{"id":"kickstart","depth":2,"text":"Kickstart"},{"id":"开始安装","depth":2,"text":"开始安装"}]}},"_type":"markdown","_id":"content:blog:pxe-centos.md","_source":"content","_file":"blog/pxe-centos.md","_extension":"md"},{"_path":"/blog/pxe-ubuntu","_dir":"blog","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"批量重装 Ubuntu 18.04","description":"Ubuntu Server 18.04.5 系统安装使用 debian-installer，兼容 Kickstart 但不够灵活，比如从 5 块 NVMe 硬盘中找到容量最小的盘安装系统这种操作就很难做到。自家的脚本是 Preseed，功能非常强大，能完成一些图形安装界面届不到的操作（缺点是有一点点复杂）。","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"概述"},"children":[{"type":"text","value":"概述"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ubuntu Server 18.04.5 系统安装使用 debian-installer，兼容 Kickstart 但不够灵活，比如从 5 块 NVMe 硬盘中找到容量最小的盘安装系统这种操作就很难做到。自家的脚本是 Preseed，功能非常强大，能完成一些图形安装界面届不到的操作（缺点是有一点点复杂）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 "},{"type":"element","tag":"a","props":{"href":"/note/linux/pxe-centos.html"},"children":[{"type":"text","value":"CentOS 篇"}]},{"type":"text","value":"中，PXE Server 需要安装 DHCP/TFTP/Nginx 等众多软件。这次改用 Dnsmasq 同时提供 DHCP 和 TFTP 服务。也省去 Nginx，直接从软件源安装系统。"}]},{"type":"element","tag":"h2","props":{"id":"安装软件"},"children":[{"type":"text","value":"安装软件"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下载 Ubuntu 镜像，文中使用的是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ubuntu-18.04.5-server-amdyes.iso"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装 dnsmasq 服务。"}]},{"type":"element","tag":"code","props":{"code":"sudo apt update\nsudo apt install dnsmasq\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt update\nsudo apt install dnsmasq\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"配置 dnsmasq，开启 DHCP 和 TFTP 功能。"}]},{"type":"element","tag":"code","props":{"code":"mkdir -p /srv/tftp/\n\nvim /etc/dnsmasq.conf\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"mkdir -p /srv/tftp/\n\nvim /etc/dnsmasq.conf\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"内容如下。"}]},{"type":"element","tag":"code","props":{"code":"interface=eth0\nbind-interfaces\ndhcp-range=172.16.199.1,172.16.199.254\ndhcp-boot=grubnetx64.efi.signed\ndhcp-host=172.16.199.1\n\nenable-tftp\ntftp-root=/srv/tftp/\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"interface=eth0\nbind-interfaces\ndhcp-range=172.16.199.1,172.16.199.254\ndhcp-boot=grubnetx64.efi.signed\ndhcp-host=172.16.199.1\n\nenable-tftp\ntftp-root=/srv/tftp/\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其中，interface 是当前使用的网络接口，dhcp-boot 是 grub 引导程序的位置，dhcp-host 是 DHCP Server 网关 IP（可用来可访问本机器），tftp-root 则是 TFTP Server 的根目录。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"启动 dnsmasq 服务。"}]},{"type":"element","tag":"code","props":{"code":"sudo systemctl start dnsmasq\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo systemctl start dnsmasq\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"配置-pxe-server"},"children":[{"type":"text","value":"配置 PXE Server"}]},{"type":"element","tag":"h3","props":{"id":"boot-loader"},"children":[{"type":"text","value":"Boot loader"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"UEFI 启动需要一个 boot loader（文中是 GRUB）。从软件源下载，然后丢进 TFTP 根目录。"}]},{"type":"element","tag":"code","props":{"code":"sudo apt-get install grub-efi-amd64-signed\n\nsudo cp /usr/lib/grub/x86_64-efi-signed/grubnetx64.efi.signed /srv/tftp/grubnetx64.efi.signed\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get install grub-efi-amd64-signed\n\nsudo cp /usr/lib/grub/x86_64-efi-signed/grubnetx64.efi.signed /srv/tftp/grubnetx64.efi.signed\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"grubnetx64.efi.signed 这个名字就是在 /etc/dnsmasq.conf 的 dhcp-boot 字段中定义的那个。"}]},{"type":"element","tag":"h3","props":{"id":"grub"},"children":[{"type":"text","value":"GRUB"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"配置 GRUB，其实就是 Ubuntu 那个选择系统的启动菜单，添加一个启动项，把系统位置从硬盘改为网络。"}]},{"type":"element","tag":"code","props":{"code":"mkdir -p /srv/tftp/grub\nvim /srv/tftp/grub/grub.cfg\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"mkdir -p /srv/tftp/grub\nvim /srv/tftp/grub/grub.cfg\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"内容如下。"}]},{"type":"element","tag":"code","props":{"code":"set default=\"0\"\nset timeout=6\nmenuentry \"Install Ubuntu\" {\n  set gfxpayload=keep\n  linux /ubuntu/linux gfxpayload=800x600x16,800x600 --- auto=true priority=critical interface=auto hostname=fox GRUB_DISABLE_OS_PROBER=true url=tftp://172.16.1.1/preseed.cfg quiet\n  initrd /ubuntu/initrd.gz\n}\n...\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"set default=\"0\"\nset timeout=6\nmenuentry \"Install Ubuntu\" {\n  set gfxpayload=keep\n  linux /ubuntu/linux gfxpayload=800x600x16,800x600 --- auto=true priority=critical interface=auto hostname=fox GRUB_DISABLE_OS_PROBER=true url=tftp://172.16.1.1/preseed.cfg quiet\n  initrd /ubuntu/initrd.gz\n}\n...\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"由于 Ubuntu 18.04 的 os-prober 操作 LVM 分区时会触发 "},{"type":"element","tag":"a","props":{"href":"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=853927","rel":["nofollow"]},"children":[{"type":"text","value":"BUG"}]},{"type":"text","value":"，所以加了个环境变量 GRUB_DISABLE_OS_PROBER=true 禁用 os-prober。其他配置项说明参考 CentOS 篇。"}]},{"type":"element","tag":"h3","props":{"id":"网络引导"},"children":[{"type":"text","value":"网络引导"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"从"},{"type":"element","tag":"a","props":{"href":"http://cdimage.ubuntu.com/netboot/","rel":["nofollow"]},"children":[{"type":"text","value":"这里"}]},{"type":"text","value":"下载 Ubuntu 的网络引导镜像，解压到 TFTP 目录下。"}]},{"type":"element","tag":"code","props":{"code":"mkdir -p /srv/tftp/ubuntu\n\nwget http://archive.ubuntu.com/ubuntu/dists/bionic-updates/main/installer-amd64/current/images/netboot/netboot.tar.gz\ntar -xvzf netboot.tar.gz -C /srv/tftp/ubuntu\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"mkdir -p /srv/tftp/ubuntu\n\nwget http://archive.ubuntu.com/ubuntu/dists/bionic-updates/main/installer-amd64/current/images/netboot/netboot.tar.gz\ntar -xvzf netboot.tar.gz -C /srv/tftp/ubuntu\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"软件包缓存"},"children":[{"type":"text","value":"软件包缓存"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ubuntu 安装程序支持 APT 安装软件包，默认是从官方软件源下载。但如果批量安装，外网怕是会炸，所以要在内网（PXE Server）搭建软件包缓存服务。"}]},{"type":"element","tag":"code","props":{"code":"sudo apt-get install apt-cacher-ng\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt-get install apt-cacher-ng\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装完成后，在 Preseed 脚本中配置源代理 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"d-i mirror/http/proxy string http://<YOUR_IP>:3142/"}]},{"type":"text","value":" 指向该机器。"}]},{"type":"element","tag":"h2","props":{"id":"preseed"},"children":[{"type":"text","value":"Preseed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Preseed 脚本可配置项非常多，详细可参见"},{"type":"element","tag":"a","props":{"href":"https://www.debian.org/releases/stretch/amd64/apbs04.html.en","rel":["nofollow"]},"children":[{"type":"text","value":"官方文档"}]},{"type":"text","value":"。下面简单举几个🌰，可根据自身需求修改。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"相同的部分"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"系统盘使用 LVM 方式分区，除了 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/boot,/boot/efi"}]},{"type":"text","value":" 分区外，其余空间全给根目录，禁用 SWAP 分区。启用 ROOT 用户，允许 ROOT 用户远程登录，安装 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"openssh-server openssh-client vim curl"}]},{"type":"text","value":" 软件。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"系统盘名字固定，比如单块 SATA 系统盘默认设备名是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/dev/sda"}]},{"type":"text","value":"，单块 NVMe SSD 是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/dev/nvme0n1"}]},{"type":"text","value":"，这样系统盘可以写死在配置中。"}]}]},{"type":"element","tag":"code","props":{"code":"### Unattended Installation\nd-i auto-install/enable boolean true\nd-i debconf/priority select critical\n\n### Localization\nd-i debian-installer/locale string en_US.UTF-8\nd-i localechooser/languagelist select en\nd-i localechooser/shortlist/en select US\nd-i localechooser/continentlist select Asia\nd-i localechooser/countrylist/Asia select China\nd-i console-setup/ask_detect boolean false\nd-i keyboard-configuration/xkb-keymap select us\n\n### Account setup\nd-i passwd/root-login boolean true\nd-i passwd/make-user boolean false\nd-i passwd/root-password password ABC123def\nd-i passwd/root-password-again password ABC123def\nd-i user-setup/allow-password-weak boolean true\n\n### Network configuration\nd-i netcfg/choose_interface select auto\nd-i netcfg/get_hostname string cat\nd-i hw-detect/load_firmware boolean true\n\n# If you want the preconfiguration file to work on systems both with and\n# without a dhcp server, uncomment these lines and the static network\n# configuration below.\nd-i netcfg/dhcp_failed note\nd-i netcfg/dhcp_options select Configure network manually\n\n# Static network configuration.\nd-i netcfg/get_ipaddress string 172.16.1.207\nd-i netcfg/get_netmask string 255.255.0.0\nd-i netcfg/get_gateway string 172.16.255.254\nd-i netcfg/get_nameservers string 223.5.5.5\nd-i netcfg/confirm_static boolean true\n\n### Partition\n# Specify a disk to partition. The device name\n# can be given in either devfs or traditional non-devfs format.\nd-i partman-auto/disk string /dev/nvme0n1\nd-i grub-installer/bootdev string /dev/nvme0n1\n# In addition, you'll need to specify the method to use.\n# The presently available methods are: \"regular\", \"lvm\" and \"crypto\"\nd-i partman-auto/method string lvm\n\n# If one of the disks that are going to be automatically partitioned\n# contains an old LVM configuration, the user will normally receive a\n# warning. This can be preseeded away...\nd-i partman-auto/purge_lvm_from_device boolean true\n\n# http://cptyesterday.wordpress.com/2012/06/17/notes-on-using-expert_recipe-in-debianubuntu-preseed-files/\nd-i partman-auto/choose_recipe select boot-root\nd-i partman-auto-lvm/new_vg_name string main\nd-i partman-auto-lvm/guided_size string max\n\nd-i partman-auto/expert_recipe string                \\\n    boot-root ::                                     \\\n        1 1 1 free                                   \\\n            $bios_boot{ }                            \\\n            method{ biosgrub }                       \\\n        .                                            \\\n        256 256 256 fat32                            \\\n            $primary{ }                              \\\n            $iflabel{ gpt }                          \\\n            $reusemethod{ }                          \\\n            method{ efi } format{ }                  \\\n            mountpoint{ /boot/efi }                  \\\n        .                                            \\\n        512 512 512 ext4                             \\\n            $primary{ }                              \\\n            $bootable{ }                             \\\n            method{ format } format{ }               \\\n            use_filesystem{ } filesystem{ ext4 }     \\\n            mountpoint{ /boot }                      \\\n        .                                            \\\n        4096 4096 -1 ext4                            \\\n            $lvmok{ }                                \\\n            method{ format } format{ }               \\\n            use_filesystem{ } filesystem{ ext4 }     \\\n            mountpoint{ / }                          \\\n            lv_name{ root }                          \\\n        .\n\n# Write the changes to disks and configure LVM\nd-i partman/confirm boolean true\nd-i partman-lvm/confirm boolean true\nd-i partman-lvm/confirm_nooverwrite boolean true\n\n# http://ubuntuforums.org/showthread.php?p=9626883\nd-i partman-lvm/device_remove_lvm boolean true\n\n# This makes partman automatically partition without confirmation.\nd-i partman/choose_partition \\\n      select Finish partitioning and write changes to disk\nd-i partman/confirm_nooverwrite boolean true\n\nd-i pkgsel/include string openssh-server openssh-client vim curl\n\n### Mirror settings\nd-i mirror/country string manual\nd-i mirror/http/hostname string mirrors.ustc.edu.cn\nd-i mirror/http/directory string /ubuntu\nd-i mirror/http/proxy string http://172.16.1.1:3142/\n\n# Custom commands\nd-i preseed/late_command string \\\n    in-target sh -c 'sed -i \"/#PermitRootLogin/a PermitRootLogin yes\" /etc/ssh/sshd_config';\n\nfinish-install finish-install/keep-consoles boolean false\nd-i finish-install/reboot_in_progress note\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"### Unattended Installation\nd-i auto-install/enable boolean true\nd-i debconf/priority select critical\n\n### Localization\nd-i debian-installer/locale string en_US.UTF-8\nd-i localechooser/languagelist select en\nd-i localechooser/shortlist/en select US\nd-i localechooser/continentlist select Asia\nd-i localechooser/countrylist/Asia select China\nd-i console-setup/ask_detect boolean false\nd-i keyboard-configuration/xkb-keymap select us\n\n### Account setup\nd-i passwd/root-login boolean true\nd-i passwd/make-user boolean false\nd-i passwd/root-password password ABC123def\nd-i passwd/root-password-again password ABC123def\nd-i user-setup/allow-password-weak boolean true\n\n### Network configuration\nd-i netcfg/choose_interface select auto\nd-i netcfg/get_hostname string cat\nd-i hw-detect/load_firmware boolean true\n\n# If you want the preconfiguration file to work on systems both with and\n# without a dhcp server, uncomment these lines and the static network\n# configuration below.\nd-i netcfg/dhcp_failed note\nd-i netcfg/dhcp_options select Configure network manually\n\n# Static network configuration.\nd-i netcfg/get_ipaddress string 172.16.1.207\nd-i netcfg/get_netmask string 255.255.0.0\nd-i netcfg/get_gateway string 172.16.255.254\nd-i netcfg/get_nameservers string 223.5.5.5\nd-i netcfg/confirm_static boolean true\n\n### Partition\n# Specify a disk to partition. The device name\n# can be given in either devfs or traditional non-devfs format.\nd-i partman-auto/disk string /dev/nvme0n1\nd-i grub-installer/bootdev string /dev/nvme0n1\n# In addition, you'll need to specify the method to use.\n# The presently available methods are: \"regular\", \"lvm\" and \"crypto\"\nd-i partman-auto/method string lvm\n\n# If one of the disks that are going to be automatically partitioned\n# contains an old LVM configuration, the user will normally receive a\n# warning. This can be preseeded away...\nd-i partman-auto/purge_lvm_from_device boolean true\n\n# http://cptyesterday.wordpress.com/2012/06/17/notes-on-using-expert_recipe-in-debianubuntu-preseed-files/\nd-i partman-auto/choose_recipe select boot-root\nd-i partman-auto-lvm/new_vg_name string main\nd-i partman-auto-lvm/guided_size string max\n\nd-i partman-auto/expert_recipe string                \\\n    boot-root ::                                     \\\n        1 1 1 free                                   \\\n            $bios_boot{ }                            \\\n            method{ biosgrub }                       \\\n        .                                            \\\n        256 256 256 fat32                            \\\n            $primary{ }                              \\\n            $iflabel{ gpt }                          \\\n            $reusemethod{ }                          \\\n            method{ efi } format{ }                  \\\n            mountpoint{ /boot/efi }                  \\\n        .                                            \\\n        512 512 512 ext4                             \\\n            $primary{ }                              \\\n            $bootable{ }                             \\\n            method{ format } format{ }               \\\n            use_filesystem{ } filesystem{ ext4 }     \\\n            mountpoint{ /boot }                      \\\n        .                                            \\\n        4096 4096 -1 ext4                            \\\n            $lvmok{ }                                \\\n            method{ format } format{ }               \\\n            use_filesystem{ } filesystem{ ext4 }     \\\n            mountpoint{ / }                          \\\n            lv_name{ root }                          \\\n        .\n\n# Write the changes to disks and configure LVM\nd-i partman/confirm boolean true\nd-i partman-lvm/confirm boolean true\nd-i partman-lvm/confirm_nooverwrite boolean true\n\n# http://ubuntuforums.org/showthread.php?p=9626883\nd-i partman-lvm/device_remove_lvm boolean true\n\n# This makes partman automatically partition without confirmation.\nd-i partman/choose_partition \\\n      select Finish partitioning and write changes to disk\nd-i partman/confirm_nooverwrite boolean true\n\nd-i pkgsel/include string openssh-server openssh-client vim curl\n\n### Mirror settings\nd-i mirror/country string manual\nd-i mirror/http/hostname string mirrors.ustc.edu.cn\nd-i mirror/http/directory string /ubuntu\nd-i mirror/http/proxy string http://172.16.1.1:3142/\n\n# Custom commands\nd-i preseed/late_command string \\\n    in-target sh -c 'sed -i \"/#PermitRootLogin/a PermitRootLogin yes\" /etc/ssh/sshd_config';\n\nfinish-install finish-install/keep-consoles boolean false\nd-i finish-install/reboot_in_progress note\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"机器安装多块硬盘，比如有 5 块 NVMe SSD，256GBx1 & 2TBx4，系统装在 256GB 的硬盘上。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"基于上面的脚本，在 early_command 中使用 Bash 脚本，通过 debconf-set 来动态指定硬盘位置。"}]},{"type":"element","tag":"code","props":{"code":"# 删除下面两个配置\nd-i partman-auto/disk string /dev/nvme0n1\nd-i grub-installer/bootdev string /dev/nvme0n1\n\n# 用这个脚本找出小于 300GB 的硬盘，指定为系统盘\nd-i partman/early_command string \\\n  for BOOTDEV in nvme0n1 nvme1n1 nvme2n1 nvme3n1 nvme4n1; do \\\n    if [ -d /sys/block/$BOOTDEV ]; then \\\n      SIZE=`cat /sys/block/$BOOTDEV/size`; \\\n      GB=$(($SIZE/2**21)); \\\n      if [ $GB -lt 300 ]; then \\\n        debconf-set partman-auto/disk \"/dev/$BOOTDEV\"; \\\n        debconf-set grub-installer/bootdev \"/dev/$BOOTDEV\"; \\\n      fi; \\\n    fi; \\\n  done\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 删除下面两个配置\nd-i partman-auto/disk string /dev/nvme0n1\nd-i grub-installer/bootdev string /dev/nvme0n1\n\n# 用这个脚本找出小于 300GB 的硬盘，指定为系统盘\nd-i partman/early_command string \\\n  for BOOTDEV in nvme0n1 nvme1n1 nvme2n1 nvme3n1 nvme4n1; do \\\n    if [ -d /sys/block/$BOOTDEV ]; then \\\n      SIZE=`cat /sys/block/$BOOTDEV/size`; \\\n      GB=$(($SIZE/2**21)); \\\n      if [ $GB -lt 300 ]; then \\\n        debconf-set partman-auto/disk \"/dev/$BOOTDEV\"; \\\n        debconf-set grub-installer/bootdev \"/dev/$BOOTDEV\"; \\\n      fi; \\\n    fi; \\\n  done\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"机器本来有系统，需要批量重装，原系统也是 LVM 方式分区。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"先移除已存在的 LVM 分区，再尝试安装（虽然有相关配置项，但该版本可能存在 "},{"type":"element","tag":"a","props":{"href":"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=740271","rel":["nofollow"]},"children":[{"type":"text","value":"BUG"}]},{"type":"text","value":"）。"}]},{"type":"element","tag":"code","props":{"code":"# 移除 LVM 分区\nd-i partman-lvm/device_remove_lvm boolean true\nd-i partman-auto/purge_lvm_from_device boolean true\n\n# 上述配置项可能存在 BUG，那就亲自删一遍\nd-i partman/early_command string \\\n    set -- $(vgs --rows --noheadings | head -n 1); \\\n    for vg in \"$@\"; do \\\n        swapoff \"/dev/$vg/swap\"; \\\n        vgremove -f \"$vg\"; \\\n    done; \\\n    set -- $(pvs --rows --noheadings | head -n 1); \\\n    for pv in \"$@\"; do \\\n        pvremove -f \"$pv\"; \\\n    done\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 移除 LVM 分区\nd-i partman-lvm/device_remove_lvm boolean true\nd-i partman-auto/purge_lvm_from_device boolean true\n\n# 上述配置项可能存在 BUG，那就亲自删一遍\nd-i partman/early_command string \\\n    set -- $(vgs --rows --noheadings | head -n 1); \\\n    for vg in \"$@\"; do \\\n        swapoff \"/dev/$vg/swap\"; \\\n        vgremove -f \"$vg\"; \\\n    done; \\\n    set -- $(pvs --rows --noheadings | head -n 1); \\\n    for pv in \"$@\"; do \\\n        pvremove -f \"$pv\"; \\\n    done\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Preseed 文件放到 TFTP 根目录 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/srv/tftp/"}]},{"type":"text","value":" 下，也就是 GRUB 菜单配置里 url 指定的那个。"}]},{"type":"element","tag":"h2","props":{"id":"pxe-引导"},"children":[{"type":"text","value":"PXE 引导"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"确保内网中没有其他 DHCP 服务，将机器接在 PXE Server 同一个交换机下。重启机器，启动时选择从 PXE 引导，观察是否获得 IP，能否下载启动文件。正常的话稍后就能看到 Ubuntu 安装界面。"}]},{"type":"element","tag":"h2","props":{"id":"参考"},"children":[{"type":"text","value":"参考"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://wiki.ubuntu.com/UEFI/PXE-netboot-install","rel":["nofollow"]},"children":[{"type":"text","value":"https://wiki.ubuntu.com/UEFI/PXE-netboot-install"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.debian.org/releases/etch/ia64/apbs04.html.en","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.debian.org/releases/etch/ia64/apbs04.html.en"}]}]}]}]},"date":"2020-10-20T21:05:00.000Z","tags":["linux","pxe"],"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"概述"},"children":[{"type":"text","value":"概述"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ubuntu Server 18.04.5 系统安装使用 debian-installer，兼容 Kickstart 但不够灵活，比如从 5 块 NVMe 硬盘中找到容量最小的盘安装系统这种操作就很难做到。自家的脚本是 Preseed，功能非常强大，能完成一些图形安装界面届不到的操作（缺点是有一点点复杂）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 "},{"type":"element","tag":"a","props":{"href":"/note/linux/pxe-centos.html"},"children":[{"type":"text","value":"CentOS 篇"}]},{"type":"text","value":"中，PXE Server 需要安装 DHCP/TFTP/Nginx 等众多软件。这次改用 Dnsmasq 同时提供 DHCP 和 TFTP 服务。也省去 Nginx，直接从软件源安装系统。"}]},{"type":"element","tag":"h2","props":{"id":"安装软件"},"children":[{"type":"text","value":"安装软件"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下载 Ubuntu 镜像，文中使用的是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ubuntu-18.04.5-server-amdyes.iso"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装 dnsmasq 服务。"}]},{"type":"element","tag":"code","props":{"code":"sudo apt update\nsudo apt install dnsmasq\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"sudo apt update"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"sudo apt install dnsmasq"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"配置 dnsmasq，开启 DHCP 和 TFTP 功能。"}]},{"type":"element","tag":"code","props":{"code":"mkdir -p /srv/tftp/\n\nvim /etc/dnsmasq.conf\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"mkdir -p /srv/tftp/"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"vim /etc/dnsmasq.conf"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"内容如下。"}]},{"type":"element","tag":"code","props":{"code":"interface=eth0\nbind-interfaces\ndhcp-range=172.16.199.1,172.16.199.254\ndhcp-boot=grubnetx64.efi.signed\ndhcp-host=172.16.199.1\n\nenable-tftp\ntftp-root=/srv/tftp/\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"interface=eth0"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"bind-interfaces"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"dhcp-range=172.16.199.1,172.16.199.254"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"dhcp-boot=grubnetx64.efi.signed"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"dhcp-host=172.16.199.1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"enable-tftp"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"tftp-root=/srv/tftp/"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其中，interface 是当前使用的网络接口，dhcp-boot 是 grub 引导程序的位置，dhcp-host 是 DHCP Server 网关 IP（可用来可访问本机器），tftp-root 则是 TFTP Server 的根目录。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"启动 dnsmasq 服务。"}]},{"type":"element","tag":"code","props":{"code":"sudo systemctl start dnsmasq\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"sudo systemctl start dnsmasq"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"配置-pxe-server"},"children":[{"type":"text","value":"配置 PXE Server"}]},{"type":"element","tag":"h3","props":{"id":"boot-loader"},"children":[{"type":"text","value":"Boot loader"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"UEFI 启动需要一个 boot loader（文中是 GRUB）。从软件源下载，然后丢进 TFTP 根目录。"}]},{"type":"element","tag":"code","props":{"code":"sudo apt-get install grub-efi-amd64-signed\n\nsudo cp /usr/lib/grub/x86_64-efi-signed/grubnetx64.efi.signed /srv/tftp/grubnetx64.efi.signed\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"sudo apt-get install grub-efi-amd64-signed"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"sudo cp /usr/lib/grub/x86_64-efi-signed/grubnetx64.efi.signed /srv/tftp/grubnetx64.efi.signed"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"grubnetx64.efi.signed 这个名字就是在 /etc/dnsmasq.conf 的 dhcp-boot 字段中定义的那个。"}]},{"type":"element","tag":"h3","props":{"id":"grub"},"children":[{"type":"text","value":"GRUB"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"配置 GRUB，其实就是 Ubuntu 那个选择系统的启动菜单，添加一个启动项，把系统位置从硬盘改为网络。"}]},{"type":"element","tag":"code","props":{"code":"mkdir -p /srv/tftp/grub\nvim /srv/tftp/grub/grub.cfg\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"mkdir -p /srv/tftp/grub"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"vim /srv/tftp/grub/grub.cfg"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"内容如下。"}]},{"type":"element","tag":"code","props":{"code":"set default=\"0\"\nset timeout=6\nmenuentry \"Install Ubuntu\" {\n  set gfxpayload=keep\n  linux /ubuntu/linux gfxpayload=800x600x16,800x600 --- auto=true priority=critical interface=auto hostname=fox GRUB_DISABLE_OS_PROBER=true url=tftp://172.16.1.1/preseed.cfg quiet\n  initrd /ubuntu/initrd.gz\n}\n...\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"set default=\"0\"\nset timeout=6\nmenuentry \"Install Ubuntu\" {\n  set gfxpayload=keep\n  linux /ubuntu/linux gfxpayload=800x600x16,800x600 --- auto=true priority=critical interface=auto hostname=fox GRUB_DISABLE_OS_PROBER=true url=tftp://172.16.1.1/preseed.cfg quiet\n  initrd /ubuntu/initrd.gz\n}\n..."}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"由于 Ubuntu 18.04 的 os-prober 操作 LVM 分区时会触发 "},{"type":"element","tag":"a","props":{"href":"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=853927","rel":["nofollow"]},"children":[{"type":"text","value":"BUG"}]},{"type":"text","value":"，所以加了个环境变量 GRUB_DISABLE_OS_PROBER=true 禁用 os-prober。其他配置项说明参考 CentOS 篇。"}]},{"type":"element","tag":"h3","props":{"id":"网络引导"},"children":[{"type":"text","value":"网络引导"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"从"},{"type":"element","tag":"a","props":{"href":"http://cdimage.ubuntu.com/netboot/","rel":["nofollow"]},"children":[{"type":"text","value":"这里"}]},{"type":"text","value":"下载 Ubuntu 的网络引导镜像，解压到 TFTP 目录下。"}]},{"type":"element","tag":"code","props":{"code":"mkdir -p /srv/tftp/ubuntu\n\nwget http://archive.ubuntu.com/ubuntu/dists/bionic-updates/main/installer-amd64/current/images/netboot/netboot.tar.gz\ntar -xvzf netboot.tar.gz -C /srv/tftp/ubuntu\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"mkdir -p /srv/tftp/ubuntu"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"wget http://archive.ubuntu.com/ubuntu/dists/bionic-updates/main/installer-amd64/current/images/netboot/netboot.tar.gz"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"tar -xvzf netboot.tar.gz -C /srv/tftp/ubuntu"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"软件包缓存"},"children":[{"type":"text","value":"软件包缓存"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ubuntu 安装程序支持 APT 安装软件包，默认是从官方软件源下载。但如果批量安装，外网怕是会炸，所以要在内网（PXE Server）搭建软件包缓存服务。"}]},{"type":"element","tag":"code","props":{"code":"sudo apt-get install apt-cacher-ng\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"sudo apt-get install apt-cacher-ng"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装完成后，在 Preseed 脚本中配置源代理 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"d-i mirror/http/proxy string http://<YOUR_IP>:3142/"}]},{"type":"text","value":" 指向该机器。"}]},{"type":"element","tag":"h2","props":{"id":"preseed"},"children":[{"type":"text","value":"Preseed"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Preseed 脚本可配置项非常多，详细可参见"},{"type":"element","tag":"a","props":{"href":"https://www.debian.org/releases/stretch/amd64/apbs04.html.en","rel":["nofollow"]},"children":[{"type":"text","value":"官方文档"}]},{"type":"text","value":"。下面简单举几个🌰，可根据自身需求修改。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"相同的部分"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"系统盘使用 LVM 方式分区，除了 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/boot,/boot/efi"}]},{"type":"text","value":" 分区外，其余空间全给根目录，禁用 SWAP 分区。启用 ROOT 用户，允许 ROOT 用户远程登录，安装 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"openssh-server openssh-client vim curl"}]},{"type":"text","value":" 软件。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"系统盘名字固定，比如单块 SATA 系统盘默认设备名是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/dev/sda"}]},{"type":"text","value":"，单块 NVMe SSD 是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/dev/nvme0n1"}]},{"type":"text","value":"，这样系统盘可以写死在配置中。"}]}]},{"type":"element","tag":"code","props":{"code":"### Unattended Installation\nd-i auto-install/enable boolean true\nd-i debconf/priority select critical\n\n### Localization\nd-i debian-installer/locale string en_US.UTF-8\nd-i localechooser/languagelist select en\nd-i localechooser/shortlist/en select US\nd-i localechooser/continentlist select Asia\nd-i localechooser/countrylist/Asia select China\nd-i console-setup/ask_detect boolean false\nd-i keyboard-configuration/xkb-keymap select us\n\n### Account setup\nd-i passwd/root-login boolean true\nd-i passwd/make-user boolean false\nd-i passwd/root-password password ABC123def\nd-i passwd/root-password-again password ABC123def\nd-i user-setup/allow-password-weak boolean true\n\n### Network configuration\nd-i netcfg/choose_interface select auto\nd-i netcfg/get_hostname string cat\nd-i hw-detect/load_firmware boolean true\n\n# If you want the preconfiguration file to work on systems both with and\n# without a dhcp server, uncomment these lines and the static network\n# configuration below.\nd-i netcfg/dhcp_failed note\nd-i netcfg/dhcp_options select Configure network manually\n\n# Static network configuration.\nd-i netcfg/get_ipaddress string 172.16.1.207\nd-i netcfg/get_netmask string 255.255.0.0\nd-i netcfg/get_gateway string 172.16.255.254\nd-i netcfg/get_nameservers string 223.5.5.5\nd-i netcfg/confirm_static boolean true\n\n### Partition\n# Specify a disk to partition. The device name\n# can be given in either devfs or traditional non-devfs format.\nd-i partman-auto/disk string /dev/nvme0n1\nd-i grub-installer/bootdev string /dev/nvme0n1\n# In addition, you'll need to specify the method to use.\n# The presently available methods are: \"regular\", \"lvm\" and \"crypto\"\nd-i partman-auto/method string lvm\n\n# If one of the disks that are going to be automatically partitioned\n# contains an old LVM configuration, the user will normally receive a\n# warning. This can be preseeded away...\nd-i partman-auto/purge_lvm_from_device boolean true\n\n# http://cptyesterday.wordpress.com/2012/06/17/notes-on-using-expert_recipe-in-debianubuntu-preseed-files/\nd-i partman-auto/choose_recipe select boot-root\nd-i partman-auto-lvm/new_vg_name string main\nd-i partman-auto-lvm/guided_size string max\n\nd-i partman-auto/expert_recipe string                \\\n    boot-root ::                                     \\\n        1 1 1 free                                   \\\n            $bios_boot{ }                            \\\n            method{ biosgrub }                       \\\n        .                                            \\\n        256 256 256 fat32                            \\\n            $primary{ }                              \\\n            $iflabel{ gpt }                          \\\n            $reusemethod{ }                          \\\n            method{ efi } format{ }                  \\\n            mountpoint{ /boot/efi }                  \\\n        .                                            \\\n        512 512 512 ext4                             \\\n            $primary{ }                              \\\n            $bootable{ }                             \\\n            method{ format } format{ }               \\\n            use_filesystem{ } filesystem{ ext4 }     \\\n            mountpoint{ /boot }                      \\\n        .                                            \\\n        4096 4096 -1 ext4                            \\\n            $lvmok{ }                                \\\n            method{ format } format{ }               \\\n            use_filesystem{ } filesystem{ ext4 }     \\\n            mountpoint{ / }                          \\\n            lv_name{ root }                          \\\n        .\n\n# Write the changes to disks and configure LVM\nd-i partman/confirm boolean true\nd-i partman-lvm/confirm boolean true\nd-i partman-lvm/confirm_nooverwrite boolean true\n\n# http://ubuntuforums.org/showthread.php?p=9626883\nd-i partman-lvm/device_remove_lvm boolean true\n\n# This makes partman automatically partition without confirmation.\nd-i partman/choose_partition \\\n      select Finish partitioning and write changes to disk\nd-i partman/confirm_nooverwrite boolean true\n\nd-i pkgsel/include string openssh-server openssh-client vim curl\n\n### Mirror settings\nd-i mirror/country string manual\nd-i mirror/http/hostname string mirrors.ustc.edu.cn\nd-i mirror/http/directory string /ubuntu\nd-i mirror/http/proxy string http://172.16.1.1:3142/\n\n# Custom commands\nd-i preseed/late_command string \\\n    in-target sh -c 'sed -i \"/#PermitRootLogin/a PermitRootLogin yes\" /etc/ssh/sshd_config';\n\nfinish-install finish-install/keep-consoles boolean false\nd-i finish-install/reboot_in_progress note\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"### Unattended Installation"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i auto-install/enable boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i debconf/priority "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" critical"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"### Localization"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i debian-installer/locale string en_US.UTF-8"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i localechooser/languagelist "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" en"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i localechooser/shortlist/en "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" US"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i localechooser/continentlist "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" Asia"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i localechooser/countrylist/Asia "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" China"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i console-setup/ask_detect boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"false"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i keyboard-configuration/xkb-keymap "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" us"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"### Account setup"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i passwd/root-login boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i passwd/make-user boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"false"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i passwd/root-password password ABC123def"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i passwd/root-password-again password ABC123def"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i user-setup/allow-password-weak boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"### Network configuration"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i netcfg/choose_interface "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" auto"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i netcfg/get_hostname string cat"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i hw-detect/load_firmware boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# If you want the preconfiguration file to work on systems both with and"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# without a dhcp server, uncomment these lines and the static network"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# configuration below."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i netcfg/dhcp_failed note"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i netcfg/dhcp_options "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" Configure network manually"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# Static network configuration."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i netcfg/get_ipaddress string 172.16.1.207"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i netcfg/get_netmask string 255.255.0.0"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i netcfg/get_gateway string 172.16.255.254"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i netcfg/get_nameservers string 223.5.5.5"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i netcfg/confirm_static boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"### Partition"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# Specify a disk to partition. The device name"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# can be given in either devfs or traditional non-devfs format."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-auto/disk string /dev/nvme0n1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i grub-installer/bootdev string /dev/nvme0n1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# In addition, you'll need to specify the method to use."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# The presently available methods are: \"regular\", \"lvm\" and \"crypto\""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-auto/method string lvm"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# If one of the disks that are going to be automatically partitioned"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# contains an old LVM configuration, the user will normally receive a"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# warning. This can be preseeded away..."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-auto/purge_lvm_from_device boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# http://cptyesterday.wordpress.com/2012/06/17/notes-on-using-expert_recipe-in-debianubuntu-preseed-files/"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-auto/choose_recipe "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" boot-root"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-auto-lvm/new_vg_name string main"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-auto-lvm/guided_size string max"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-auto/expert_recipe string                \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    boot-root ::                                     \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        1 1 1 free                                   \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            $bios_boot{ }                            \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            method{ biosgrub }                       \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"                                            \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        256 256 256 fat32                            \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            $primary{ }                              \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            $iflabel{ gpt }                          \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            $reusemethod{ }                          \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            method{ efi } format{ }                  \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            mountpoint{ /boot/efi }                  \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"                                            \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        512 512 512 ext4                             \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            $primary{ }                              \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            $bootable{ }                             \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            method{ format } format{ }               \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            use_filesystem{ } filesystem{ ext4 }     \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            mountpoint{ /boot }                      \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"                                            \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        4096 4096 -1 ext4                            \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            $lvmok{ }                                \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            method{ format } format{ }               \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            use_filesystem{ } filesystem{ ext4 }     \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            mountpoint{ / }                          \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"            lv_name{ root }                          \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# Write the changes to disks and configure LVM"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman/confirm boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-lvm/confirm boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-lvm/confirm_nooverwrite boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# http://ubuntuforums.org/showthread.php?p=9626883"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-lvm/device_remove_lvm boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# This makes partman automatically partition without confirmation."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman/choose_partition \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"      "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"select"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" Finish partitioning and write changes to disk"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman/confirm_nooverwrite boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i pkgsel/include string openssh-server openssh-client vim curl"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"### Mirror settings"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i mirror/country string manual"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i mirror/http/hostname string mirrors.ustc.edu.cn"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i mirror/http/directory string /ubuntu"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i mirror/http/proxy string http://172.16.1.1:3142/"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# Custom commands"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i preseed/late_command string \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    in-target sh -c "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"'sed -i \"/#PermitRootLogin/a PermitRootLogin yes\" /etc/ssh/sshd_config'"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"finish-install finish-install/keep-consoles boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"false"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i finish-install/reboot_in_progress note"}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"机器安装多块硬盘，比如有 5 块 NVMe SSD，256GBx1 & 2TBx4，系统装在 256GB 的硬盘上。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"基于上面的脚本，在 early_command 中使用 Bash 脚本，通过 debconf-set 来动态指定硬盘位置。"}]},{"type":"element","tag":"code","props":{"code":"# 删除下面两个配置\nd-i partman-auto/disk string /dev/nvme0n1\nd-i grub-installer/bootdev string /dev/nvme0n1\n\n# 用这个脚本找出小于 300GB 的硬盘，指定为系统盘\nd-i partman/early_command string \\\n  for BOOTDEV in nvme0n1 nvme1n1 nvme2n1 nvme3n1 nvme4n1; do \\\n    if [ -d /sys/block/$BOOTDEV ]; then \\\n      SIZE=`cat /sys/block/$BOOTDEV/size`; \\\n      GB=$(($SIZE/2**21)); \\\n      if [ $GB -lt 300 ]; then \\\n        debconf-set partman-auto/disk \"/dev/$BOOTDEV\"; \\\n        debconf-set grub-installer/bootdev \"/dev/$BOOTDEV\"; \\\n      fi; \\\n    fi; \\\n  done\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# 删除下面两个配置"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-auto/disk string /dev/nvme0n1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i grub-installer/bootdev string /dev/nvme0n1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# 用这个脚本找出小于 300GB 的硬盘，指定为系统盘"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman/early_command string \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"for"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" BOOTDEV "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"in"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" nvme0n1 nvme1n1 nvme2n1 nvme3n1 nvme4n1"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"do"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" [ "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"-d"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" /sys/block/$BOOTDEV ]"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"then"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"      SIZE="}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"`cat /sys/block/"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"$BOOTDEV"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"/size`"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"      GB="}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"$(("}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"$SIZE"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"/"}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"**"}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"21"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"))"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"      "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"if"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" [ $GB "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"-lt"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" 300 ]"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"then"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        debconf-set partman-auto/disk "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\"/dev/"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"$BOOTDEV"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        debconf-set grub-installer/bootdev "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\"/dev/"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"$BOOTDEV"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"      "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"fi;"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"fi;"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"done"}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"机器本来有系统，需要批量重装，原系统也是 LVM 方式分区。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"先移除已存在的 LVM 分区，再尝试安装（虽然有相关配置项，但该版本可能存在 "},{"type":"element","tag":"a","props":{"href":"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=740271","rel":["nofollow"]},"children":[{"type":"text","value":"BUG"}]},{"type":"text","value":"）。"}]},{"type":"element","tag":"code","props":{"code":"# 移除 LVM 分区\nd-i partman-lvm/device_remove_lvm boolean true\nd-i partman-auto/purge_lvm_from_device boolean true\n\n# 上述配置项可能存在 BUG，那就亲自删一遍\nd-i partman/early_command string \\\n    set -- $(vgs --rows --noheadings | head -n 1); \\\n    for vg in \"$@\"; do \\\n        swapoff \"/dev/$vg/swap\"; \\\n        vgremove -f \"$vg\"; \\\n    done; \\\n    set -- $(pvs --rows --noheadings | head -n 1); \\\n    for pv in \"$@\"; do \\\n        pvremove -f \"$pv\"; \\\n    done\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# 移除 LVM 分区"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-lvm/device_remove_lvm boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman-auto/purge_lvm_from_device boolean "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"true"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a80ec9"},"children":[{"type":"text","value":"# 上述配置项可能存在 BUG，那就亲自删一遍"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"d-i partman/early_command string \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"set"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" -- "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"$(vgs --rows --noheadings "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":" head -n 1)"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"for"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" vg "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"in"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"$@"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"do"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        swapoff "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\"/dev/"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"$vg"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"/swap\""}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        vgremove -f "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"$vg"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"done;"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-93a0e2"},"children":[{"type":"text","value":"set"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" -- "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"$(pvs --rows --noheadings "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":" head -n 1)"}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"for"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" pv "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"in"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"$@"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"do"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"        pvremove -f "}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"$pv"}]},{"type":"element","tag":"span","props":{"class":"ct-8a0db2"},"children":[{"type":"text","value":"\""}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":";"}]},{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":" \\"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-7d49ad"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-724c3a"},"children":[{"type":"text","value":"done"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Preseed 文件放到 TFTP 根目录 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/srv/tftp/"}]},{"type":"text","value":" 下，也就是 GRUB 菜单配置里 url 指定的那个。"}]},{"type":"element","tag":"h2","props":{"id":"pxe-引导"},"children":[{"type":"text","value":"PXE 引导"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"确保内网中没有其他 DHCP 服务，将机器接在 PXE Server 同一个交换机下。重启机器，启动时选择从 PXE 引导，观察是否获得 IP，能否下载启动文件。正常的话稍后就能看到 Ubuntu 安装界面。"}]},{"type":"element","tag":"h2","props":{"id":"参考"},"children":[{"type":"text","value":"参考"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://wiki.ubuntu.com/UEFI/PXE-netboot-install","rel":["nofollow"]},"children":[{"type":"text","value":"https://wiki.ubuntu.com/UEFI/PXE-netboot-install"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.debian.org/releases/etch/ia64/apbs04.html.en","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.debian.org/releases/etch/ia64/apbs04.html.en"}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-8a0db2{color:#0A3069}.ct-724c3a{color:#CF222E}.ct-93a0e2{color:#0550AE}.ct-a80ec9{color:#6E7781}.ct-7d49ad{color:#24292F}.dark .ct-7d49ad{color:#C9D1D9}.dark .ct-a80ec9{color:#8B949E}.dark .ct-93a0e2{color:#79C0FF}.dark .ct-724c3a{color:#FF7B72}.dark .ct-8a0db2{color:#A5D6FF}"}]}],"toc":{"title":"","searchDepth":5,"depth":5,"links":[{"id":"概述","depth":2,"text":"概述"},{"id":"安装软件","depth":2,"text":"安装软件"},{"id":"配置-pxe-server","depth":2,"text":"配置 PXE Server","children":[{"id":"boot-loader","depth":3,"text":"Boot loader"},{"id":"grub","depth":3,"text":"GRUB"},{"id":"网络引导","depth":3,"text":"网络引导"},{"id":"软件包缓存","depth":3,"text":"软件包缓存"}]},{"id":"preseed","depth":2,"text":"Preseed"},{"id":"pxe-引导","depth":2,"text":"PXE 引导"},{"id":"参考","depth":2,"text":"参考"}]}},"_type":"markdown","_id":"content:blog:pxe-ubuntu.md","_source":"content","_file":"blog/pxe-ubuntu.md","_extension":"md"},{"_path":"/blog/use-hpc-like-pc","_dir":"blog","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"超算也能用来建站吗？","description":"超算上跑的程序一般都会针对任务调度系统定制优化，比如将大规模优化问题通过数学方法分解成数个子问题，或者 FFT 之类的适合分解的算法，配合调度工具并行计算出结果再迭代解出原问题。","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"概述"},"children":[{"type":"text","value":"概述"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"传统超算由多个计算节点组成，每个节点有自己的操作系统，可独立或与其他节点协同工作。设计难点在于传输带宽和延迟，共享内存，并行存储，散热，软件优化等方面。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"文中使用的超算，其计算节点看起来是个 Linux 服务器，可以 SSH 登录，节点间使用 InfiniBand 协议通信，共享 home 目录。超算常用于并行计算，实际使用中一般不会亲自 SSH 上去部署服务，而是通过任务调度工具，比如 Slurm (Simple Linux Utility for Resource Management)，开源的超算资源管理软件，在 TOP500 超算中占有率超过 50%。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"超算上跑的程序一般都会针对任务调度系统定制优化，比如将大规模优化问题通过数学方法分解成数个子问题，或者 FFT 之类的适合分解的算法，配合调度工具并行计算出结果再迭代解出原问题。"}]},{"type":"element","tag":"h2","props":{"id":"食材"},"children":[{"type":"text","value":"食材"}]},{"type":"element","tag":"h3","props":{"id":"slurm"},"children":[{"type":"text","value":"Slurm"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Slurm 调度工具常见于 Linux 超算，简单说下部署任务时常用的方法。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"salloc"}]},{"type":"text","value":": 先抢占资源，后部署任务。执行 salloc 命令获取节点资源（如果是超算中心需要排队等待，排到后就开始计费），此时可以手动 ssh 登录计算节点。当用户退出节点时任务自动终止，适合软件测试。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"srun"}]},{"type":"text","value":": 交互式提交任务。命令提交后会在终端实时返回程序输出内容，程序退出自动释放资源，适合交互式单节点任务。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sbatch"}]},{"type":"text","value":": 批量提交任务。将节点类型，任务数量，资源需求等参数和执行程序的命令写在 Bash 脚本中提交，在所有任务执行完成后释放资源（执行失败也会释放），适合并行或多步任务。"}]}]},{"type":"element","tag":"h3","props":{"id":"modules"},"children":[{"type":"text","value":"Modules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"使用 pacman / apt 安装软件时会也会自动安装依赖，而超算出于安全和稳定的考虑，禁止用户获取 root 权限，用户不能使用 apt 之类的包管理工具，取而代之的是 environment modules。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Modules 是一个 Shell 初始化工具，可在 Shell 中动态加载依赖的软件/库（由管理员预装）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"查看可用的 gcc 软件版本。"}]},{"type":"element","tag":"code","props":{"code":"module avail >> module.log 2>&1\ncat module.log | grep gcc\n\ngcc/4.4.7-kd\ngcc/4.9.2-fenggl\ngcc/7.3.0-wzm\ngcc/8.1.0-wjl\ngcc/8.3.0-wzm\ngcc/9.1.0-fenggl\n...\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"module avail >> module.log 2>&1\ncat module.log | grep gcc\n\ngcc/4.4.7-kd\ngcc/4.9.2-fenggl\ngcc/7.3.0-wzm\ngcc/8.1.0-wjl\ngcc/8.3.0-wzm\ngcc/9.1.0-fenggl\n...\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"复制软件全称，载入到当前环境。"}]},{"type":"element","tag":"code","props":{"code":"module load gcc/8.1.0-wjl\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"module load gcc/8.1.0-wjl\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"之后就能用 GCC 8.1 编译程序了。但如果是 Python Web 程序，依赖太多，找管理员一个个添加也不太合适。不如换个思路，不知道大家有没有想到容器呢？"}]},{"type":"element","tag":"h3","props":{"id":"singularity"},"children":[{"type":"text","value":"Singularity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Singularity 是专为超算打造的容器，支持 InfiniBand 和 GPU 等 PCIe 设备，对性能的损耗可以忽略不计。我们可以在本地打包 Singularity 镜像，再到超算上用 environment modules 加载 Singularity 来运行镜像。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"回到正题，那么先尝试部署个 screenfetch 获取节点的硬件信息。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Singularity 兼容 Docker 镜像，也有自己的镜像格式。创建 singularity 定义文件"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"screenfetch.def"}]},{"type":"text","value":"，写入如下内容。"}]},{"type":"element","tag":"code","props":{"code":"Bootstrap: docker\nFrom: ubuntu:18.04\n\n%help\n    App: screenfetch\n    Usage: singulaity exec <image name> <command>\n\n%files\n    /etc/apt/sources.list\n    /etc/ssl/certs /etc/ssl/certs\n\n%post\n    apt-get update && apt-get install -y screenfetch\n    rm -rf /var/lib/apt/lists/*\n\n%environment\n    export LC_ALL=C\n\n%runscript\n    exec screenfetch\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"Bootstrap: docker\nFrom: ubuntu:18.04\n\n%help\n    App: screenfetch\n    Usage: singulaity exec <image name> <command>\n\n%files\n    /etc/apt/sources.list\n    /etc/ssl/certs /etc/ssl/certs\n\n%post\n    apt-get update && apt-get install -y screenfetch\n    rm -rf /var/lib/apt/lists/*\n\n%environment\n    export LC_ALL=C\n\n%runscript\n    exec screenfetch\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Bootstrap 是基础镜像源，From 是基础镜像，%help 是帮助信息，%files 是需要打包的文件。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这个栗子中，我们从 Docker 源获取 Ubuntu 18.04 基础镜像，将本机 apt 软件源配置和 ssl 证书拷贝到容器内的相同位置，然后安装 screenfetch 并清理缓存节省空间，最后设置环境变量和启动容器时执行的命令。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"打包镜像到当前目录。"}]},{"type":"element","tag":"code","props":{"code":"singularity build run.sif screenfetch.def\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"singularity build run.sif screenfetch.def\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"run.sif 就是镜像本体了。容器有多种启动方式，比如，使用 run 指令会运行 runscript 中的语句，而 exec 指令可以自定义容器运行的程序，比如。"}]},{"type":"element","tag":"code","props":{"code":"singularity run run.sif\nsingularity exec run.sif screenfetch\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"singularity run run.sif\nsingularity exec run.sif screenfetch\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"两条命令返回相同的结果。如果你对 Dockerfile 比较熟悉，也可以打包 Docker 镜像，上传到 Docker Hub，然后使用 Singularity 运行 Docker 镜像，这样的镜像体积小很多，比如。"}]},{"type":"element","tag":"code","props":{"code":"singularity exec docker://ubuntu:latest lsb_release -a\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"singularity exec docker://ubuntu:latest lsb_release -a\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"料理"},"children":[{"type":"text","value":"料理"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有了容器，就算把博客挂到超算上也没问题呦！"}]},{"type":"element","tag":"h3","props":{"id":"多节点部署相同参数"},"children":[{"type":"text","value":"多节点部署（相同参数）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下面尝试部署分布式程序，包含一个主程序和多个子程序，通信协议是 RESTful API。子程序分别部署在多个节点上，相互没有直接通信，由主程序统一调度。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"新建 sbatch 脚本"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"job-worker.sh"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"#!/bin/sh\n#SBATCH --job-name worker\n#SBATCH --error=job-%j.err\n#SBATCH --partition=amd\n#SBATCH --nodes=3\n#SBATCH --ntasks=3\n#SBATCH --cpus-per-task=64\n#SBATCH --no-kill=on\n\nmodule load singularity/3.6\n\nsingularity exec bin.sif <command>\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#!/bin/sh\n#SBATCH --job-name worker\n#SBATCH --error=job-%j.err\n#SBATCH --partition=amd\n#SBATCH --nodes=3\n#SBATCH --ntasks=3\n#SBATCH --cpus-per-task=64\n#SBATCH --no-kill=on\n\nmodule load singularity/3.6\n\nsingularity exec bin.sif <command>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"sbatch 配置中的 nodes 和 ntasks 保持一致，cpus-per-task 是单个节点的核心数，以保证每个节点运行一个程序（只设定 ntasks 也可以），no-kill 参数可以让单一节点的故障不影响其他节点。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"执行"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sbatch job-worker.sh"}]},{"type":"text","value":"即可部署集群，"},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"但似乎没办法修改任务的运行参数。"}]},{"type":"element","tag":"a","props":{"href":"https://slurm.schedmd.com/sbatch.html","rel":["nofollow"]},"children":[{"type":"text","value":"这里"}]},{"type":"text","value":" filename pattern 的说明，通配符 %A 和 %a 代指作业编号和索引编号，有兴趣可以尝试下能否用在命令参数中。"}]},{"type":"element","tag":"h3","props":{"id":"多节点部署不同参数"},"children":[{"type":"text","value":"多节点部署（不同参数）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"为解决上述问题，将 nodes 和 ntasks 改为 1，这样 sbatch 脚本只会部署单个节点，然后循环执行 sbatch，在每次循环中修改 sbatch 脚本参数，以此实现动态传参的效果。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sbatch 脚本"}]}]},{"type":"element","tag":"code","props":{"code":"#!/bin/sh\n#SBATCH --job-name worker\n#SBATCH --error=job-%j.err\n#SBATCH --partition=amd\n#SBATCH --ntasks=1\n\nmodule load singularity/3.6\n\nip=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d '/')\n\nsingularity exec bin.sif <command> -i $ip -p $1\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#!/bin/sh\n#SBATCH --job-name worker\n#SBATCH --error=job-%j.err\n#SBATCH --partition=amd\n#SBATCH --ntasks=1\n\nmodule load singularity/3.6\n\nip=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d '/')\n\nsingularity exec bin.sif <command> -i $ip -p $1\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"外部脚本"}]}]},{"type":"element","tag":"code","props":{"code":"#!/bin/bash\n\nset -o pipefail\n\nfor i in {23300..23333};\ndo\n    sbatch job-worker.sh $i\n    echo \"Task $i works.\"\ndone\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#!/bin/bash\n\nset -o pipefail\n\nfor i in {23300..23333};\ndo\n    sbatch job-worker.sh $i\n    echo \"Task $i works.\"\ndone\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在这个栗子中我们部署了 33 个程序，监听的端口各不相同（23300 ~ 23333）。"}]},{"type":"element","tag":"h3","props":{"id":"单节点部署"},"children":[{"type":"text","value":"单节点部署"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果想要多个程序放在一个节点运行，也就是单节点一次提交多个不同的程序。但 Slurm 好像没有这种方法。不过 sbatch 支持 bash 脚本，那直接用 bash 也是可以的吧。"}]},{"type":"element","tag":"code","props":{"code":"#!/bin/sh\n#SBATCH --job-name worker\n#SBATCH --error=job-%j.err\n#SBATCH --partition=amd\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=64\n\nmodule load singularity/3.6\n\nnohup singularity exec bin.sif <bin1> <command1> >> module1.log 2>&1 &\nsleep 30s\nnohup singularity exec bin.sif <bin2> <command2> >> module2.log 2>&1 &\nwait\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"#!/bin/sh\n#SBATCH --job-name worker\n#SBATCH --error=job-%j.err\n#SBATCH --partition=amd\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=64\n\nmodule load singularity/3.6\n\nnohup singularity exec bin.sif <bin1> <command1> >> module1.log 2>&1 &\nsleep 30s\nnohup singularity exec bin.sif <bin2> <command2> >> module2.log 2>&1 &\nwait\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这样就在单个节点运行了两个任务。当 sbatch 脚本执行完成后，Slurm 会认为任务结束并释放资源，使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"wait"}]},{"type":"text","value":" 可以让 Slurm 等待所有后台任务执行完成。"}]},{"type":"element","tag":"h2","props":{"id":"结论"},"children":[{"type":"text","value":"结论"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"基于上述方法（主要是容器），就是超算也能为所欲为。至于💰代价嘛..."}]}]},"date":"2020-11-26T12:15:40.000Z","tags":["hpc","slurm","linux","container"],"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"概述"},"children":[{"type":"text","value":"概述"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"传统超算由多个计算节点组成，每个节点有自己的操作系统，可独立或与其他节点协同工作。设计难点在于传输带宽和延迟，共享内存，并行存储，散热，软件优化等方面。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"文中使用的超算，其计算节点看起来是个 Linux 服务器，可以 SSH 登录，节点间使用 InfiniBand 协议通信，共享 home 目录。超算常用于并行计算，实际使用中一般不会亲自 SSH 上去部署服务，而是通过任务调度工具，比如 Slurm (Simple Linux Utility for Resource Management)，开源的超算资源管理软件，在 TOP500 超算中占有率超过 50%。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"超算上跑的程序一般都会针对任务调度系统定制优化，比如将大规模优化问题通过数学方法分解成数个子问题，或者 FFT 之类的适合分解的算法，配合调度工具并行计算出结果再迭代解出原问题。"}]},{"type":"element","tag":"h2","props":{"id":"食材"},"children":[{"type":"text","value":"食材"}]},{"type":"element","tag":"h3","props":{"id":"slurm"},"children":[{"type":"text","value":"Slurm"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Slurm 调度工具常见于 Linux 超算，简单说下部署任务时常用的方法。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"salloc"}]},{"type":"text","value":": 先抢占资源，后部署任务。执行 salloc 命令获取节点资源（如果是超算中心需要排队等待，排到后就开始计费），此时可以手动 ssh 登录计算节点。当用户退出节点时任务自动终止，适合软件测试。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"srun"}]},{"type":"text","value":": 交互式提交任务。命令提交后会在终端实时返回程序输出内容，程序退出自动释放资源，适合交互式单节点任务。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sbatch"}]},{"type":"text","value":": 批量提交任务。将节点类型，任务数量，资源需求等参数和执行程序的命令写在 Bash 脚本中提交，在所有任务执行完成后释放资源（执行失败也会释放），适合并行或多步任务。"}]}]},{"type":"element","tag":"h3","props":{"id":"modules"},"children":[{"type":"text","value":"Modules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"使用 pacman / apt 安装软件时会也会自动安装依赖，而超算出于安全和稳定的考虑，禁止用户获取 root 权限，用户不能使用 apt 之类的包管理工具，取而代之的是 environment modules。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Modules 是一个 Shell 初始化工具，可在 Shell 中动态加载依赖的软件/库（由管理员预装）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"查看可用的 gcc 软件版本。"}]},{"type":"element","tag":"code","props":{"code":"module avail >> module.log 2>&1\ncat module.log | grep gcc\n\ngcc/4.4.7-kd\ngcc/4.9.2-fenggl\ngcc/7.3.0-wzm\ngcc/8.1.0-wjl\ngcc/8.3.0-wzm\ngcc/9.1.0-fenggl\n...\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"module avail "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":">>"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" module.log "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"2>&1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"cat module.log "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" grep gcc"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"gcc/4.4.7-kd"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"gcc/4.9.2-fenggl"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"gcc/7.3.0-wzm"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"gcc/8.1.0-wjl"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"gcc/8.3.0-wzm"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"gcc/9.1.0-fenggl"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"..."}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"复制软件全称，载入到当前环境。"}]},{"type":"element","tag":"code","props":{"code":"module load gcc/8.1.0-wjl\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"module load gcc/8.1.0-wjl"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"之后就能用 GCC 8.1 编译程序了。但如果是 Python Web 程序，依赖太多，找管理员一个个添加也不太合适。不如换个思路，不知道大家有没有想到容器呢？"}]},{"type":"element","tag":"h3","props":{"id":"singularity"},"children":[{"type":"text","value":"Singularity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Singularity 是专为超算打造的容器，支持 InfiniBand 和 GPU 等 PCIe 设备，对性能的损耗可以忽略不计。我们可以在本地打包 Singularity 镜像，再到超算上用 environment modules 加载 Singularity 来运行镜像。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"回到正题，那么先尝试部署个 screenfetch 获取节点的硬件信息。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Singularity 兼容 Docker 镜像，也有自己的镜像格式。创建 singularity 定义文件"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"screenfetch.def"}]},{"type":"text","value":"，写入如下内容。"}]},{"type":"element","tag":"code","props":{"code":"Bootstrap: docker\nFrom: ubuntu:18.04\n\n%help\n    App: screenfetch\n    Usage: singulaity exec <image name> <command>\n\n%files\n    /etc/apt/sources.list\n    /etc/ssl/certs /etc/ssl/certs\n\n%post\n    apt-get update && apt-get install -y screenfetch\n    rm -rf /var/lib/apt/lists/*\n\n%environment\n    export LC_ALL=C\n\n%runscript\n    exec screenfetch\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"Bootstrap: docker"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"From: ubuntu:18.04"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"%help"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    App: screenfetch"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    Usage: singulaity "}]},{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"exec"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"image name"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"command"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":">"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"%files"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    /etc/apt/sources.list"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    /etc/ssl/certs /etc/ssl/certs"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"%post"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    apt-get update "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"&&"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" apt-get install -y screenfetch"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    rm -rf /var/lib/apt/lists/"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"*"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"%environment"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"export"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" LC_ALL=C"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"%runscript"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"exec"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" screenfetch"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Bootstrap 是基础镜像源，From 是基础镜像，%help 是帮助信息，%files 是需要打包的文件。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这个栗子中，我们从 Docker 源获取 Ubuntu 18.04 基础镜像，将本机 apt 软件源配置和 ssl 证书拷贝到容器内的相同位置，然后安装 screenfetch 并清理缓存节省空间，最后设置环境变量和启动容器时执行的命令。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"打包镜像到当前目录。"}]},{"type":"element","tag":"code","props":{"code":"singularity build run.sif screenfetch.def\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"singularity build run.sif screenfetch.def"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"run.sif 就是镜像本体了。容器有多种启动方式，比如，使用 run 指令会运行 runscript 中的语句，而 exec 指令可以自定义容器运行的程序，比如。"}]},{"type":"element","tag":"code","props":{"code":"singularity run run.sif\nsingularity exec run.sif screenfetch\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"singularity run run.sif"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"singularity "}]},{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"exec"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" run.sif screenfetch"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"两条命令返回相同的结果。如果你对 Dockerfile 比较熟悉，也可以打包 Docker 镜像，上传到 Docker Hub，然后使用 Singularity 运行 Docker 镜像，这样的镜像体积小很多，比如。"}]},{"type":"element","tag":"code","props":{"code":"singularity exec docker://ubuntu:latest lsb_release -a\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"singularity "}]},{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"exec"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" docker://ubuntu:latest lsb_release -a"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"料理"},"children":[{"type":"text","value":"料理"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有了容器，就算把博客挂到超算上也没问题呦！"}]},{"type":"element","tag":"h3","props":{"id":"多节点部署相同参数"},"children":[{"type":"text","value":"多节点部署（相同参数）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下面尝试部署分布式程序，包含一个主程序和多个子程序，通信协议是 RESTful API。子程序分别部署在多个节点上，相互没有直接通信，由主程序统一调度。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"新建 sbatch 脚本"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"job-worker.sh"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"#!/bin/sh\n#SBATCH --job-name worker\n#SBATCH --error=job-%j.err\n#SBATCH --partition=amd\n#SBATCH --nodes=3\n#SBATCH --ntasks=3\n#SBATCH --cpus-per-task=64\n#SBATCH --no-kill=on\n\nmodule load singularity/3.6\n\nsingularity exec bin.sif <command>\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#!/bin/sh"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --job-name worker"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --error=job-%j.err"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --partition=amd"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --nodes=3"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --ntasks=3"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --cpus-per-task=64"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --no-kill=on"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"module load singularity/3.6"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"singularity "}]},{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"exec"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" bin.sif "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"command"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":">"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"sbatch 配置中的 nodes 和 ntasks 保持一致，cpus-per-task 是单个节点的核心数，以保证每个节点运行一个程序（只设定 ntasks 也可以），no-kill 参数可以让单一节点的故障不影响其他节点。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"执行"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sbatch job-worker.sh"}]},{"type":"text","value":"即可部署集群，"},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"但似乎没办法修改任务的运行参数。"}]},{"type":"element","tag":"a","props":{"href":"https://slurm.schedmd.com/sbatch.html","rel":["nofollow"]},"children":[{"type":"text","value":"这里"}]},{"type":"text","value":" filename pattern 的说明，通配符 %A 和 %a 代指作业编号和索引编号，有兴趣可以尝试下能否用在命令参数中。"}]},{"type":"element","tag":"h3","props":{"id":"多节点部署不同参数"},"children":[{"type":"text","value":"多节点部署（不同参数）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"为解决上述问题，将 nodes 和 ntasks 改为 1，这样 sbatch 脚本只会部署单个节点，然后循环执行 sbatch，在每次循环中修改 sbatch 脚本参数，以此实现动态传参的效果。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"sbatch 脚本"}]}]},{"type":"element","tag":"code","props":{"code":"#!/bin/sh\n#SBATCH --job-name worker\n#SBATCH --error=job-%j.err\n#SBATCH --partition=amd\n#SBATCH --ntasks=1\n\nmodule load singularity/3.6\n\nip=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d '/')\n\nsingularity exec bin.sif <command> -i $ip -p $1\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#!/bin/sh"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --job-name worker"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --error=job-%j.err"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --partition=amd"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --ntasks=1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"module load singularity/3.6"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"ip="}]},{"type":"element","tag":"span","props":{"class":"ct-e7dd79"},"children":[{"type":"text","value":"$(ip addr "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-e7dd79"},"children":[{"type":"text","value":" grep 'state UP' -A2 "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-e7dd79"},"children":[{"type":"text","value":" tail -n1 "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-e7dd79"},"children":[{"type":"text","value":" awk '{print $2}' "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"|"}]},{"type":"element","tag":"span","props":{"class":"ct-e7dd79"},"children":[{"type":"text","value":" cut -f1 -d '/')"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"singularity "}]},{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"exec"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" bin.sif "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"command"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" -i $ip -p $1"}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"外部脚本"}]}]},{"type":"element","tag":"code","props":{"code":"#!/bin/bash\n\nset -o pipefail\n\nfor i in {23300..23333};\ndo\n    sbatch job-worker.sh $i\n    echo \"Task $i works.\"\ndone\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#!/bin/bash"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"set"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" -o pipefail"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"for"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" i "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"in"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" {23300..23333}"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"do"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    sbatch job-worker.sh $i"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"echo"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-e7dd79"},"children":[{"type":"text","value":"\"Task "}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"$i"}]},{"type":"element","tag":"span","props":{"class":"ct-e7dd79"},"children":[{"type":"text","value":" works.\""}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"done"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在这个栗子中我们部署了 33 个程序，监听的端口各不相同（23300 ~ 23333）。"}]},{"type":"element","tag":"h3","props":{"id":"单节点部署"},"children":[{"type":"text","value":"单节点部署"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果想要多个程序放在一个节点运行，也就是单节点一次提交多个不同的程序。但 Slurm 好像没有这种方法。不过 sbatch 支持 bash 脚本，那直接用 bash 也是可以的吧。"}]},{"type":"element","tag":"code","props":{"code":"#!/bin/sh\n#SBATCH --job-name worker\n#SBATCH --error=job-%j.err\n#SBATCH --partition=amd\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=64\n\nmodule load singularity/3.6\n\nnohup singularity exec bin.sif <bin1> <command1> >> module1.log 2>&1 &\nsleep 30s\nnohup singularity exec bin.sif <bin2> <command2> >> module2.log 2>&1 &\nwait\n","language":"bash"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#!/bin/sh"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --job-name worker"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --error=job-%j.err"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --partition=amd"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --nodes=1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --ntasks=1"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-a08478"},"children":[{"type":"text","value":"#SBATCH --cpus-per-task=64"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"module load singularity/3.6"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"nohup singularity "}]},{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"exec"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" bin.sif "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"bin"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"1>"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"command"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"1>"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":">>"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" module1.log "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"2>&1"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"&"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"sleep 30s"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"nohup singularity "}]},{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"exec"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" bin.sif "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"bin"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"2>"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":"command"}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"2>"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":">>"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" module2.log "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"2>&1"}]},{"type":"element","tag":"span","props":{"class":"ct-2130d2"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-6e7bd7"},"children":[{"type":"text","value":"&"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-e09eed"},"children":[{"type":"text","value":"wait"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这样就在单个节点运行了两个任务。当 sbatch 脚本执行完成后，Slurm 会认为任务结束并释放资源，使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"wait"}]},{"type":"text","value":" 可以让 Slurm 等待所有后台任务执行完成。"}]},{"type":"element","tag":"h2","props":{"id":"结论"},"children":[{"type":"text","value":"结论"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"基于上述方法（主要是容器），就是超算也能为所欲为。至于💰代价嘛..."}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-e7dd79{color:#0A3069}.ct-a08478{color:#6E7781}.ct-e09eed{color:#0550AE}.ct-6e7bd7{color:#CF222E}.ct-2130d2{color:#24292F}.dark .ct-2130d2{color:#C9D1D9}.dark .ct-6e7bd7{color:#FF7B72}.dark .ct-e09eed{color:#79C0FF}.dark .ct-a08478{color:#8B949E}.dark .ct-e7dd79{color:#A5D6FF}"}]}],"toc":{"title":"","searchDepth":5,"depth":5,"links":[{"id":"概述","depth":2,"text":"概述"},{"id":"食材","depth":2,"text":"食材","children":[{"id":"slurm","depth":3,"text":"Slurm"},{"id":"modules","depth":3,"text":"Modules"},{"id":"singularity","depth":3,"text":"Singularity"}]},{"id":"料理","depth":2,"text":"料理","children":[{"id":"多节点部署相同参数","depth":3,"text":"多节点部署（相同参数）"},{"id":"多节点部署不同参数","depth":3,"text":"多节点部署（不同参数）"},{"id":"单节点部署","depth":3,"text":"单节点部署"}]},{"id":"结论","depth":2,"text":"结论"}]}},"_type":"markdown","_id":"content:blog:use-hpc-like-pc.md","_source":"content","_file":"blog/use-hpc-like-pc.md","_extension":"md"}],"navigation":[{"title":"Blog","_path":"/blog","children":[{"title":"阿库娅很不错，要整一个吗？","_path":"/blog/artificial-baka-one"},{"title":"NVIDIA 核试验（Linux）","_path":"/blog/make-nvidia-explosion"},{"title":"批量安装 CentOS 7","_path":"/blog/pxe-centos"},{"title":"批量重装 Ubuntu 18.04","_path":"/blog/pxe-ubuntu"},{"title":"超算也能用来建站吗？","_path":"/blog/use-hpc-like-pc"}]}]}